'use strict';var cov_79w0ms3bg=function(){var path="/home/htchen/console-core-service-sherpa/app/service/gateway/service.js";var hash="ca2d227896943ca67b36994c9ee30b57eb61328b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/htchen/console-core-service-sherpa/app/service/gateway/service.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:35}},"1":{start:{line:4,column:18},end:{line:4,column:38}},"2":{start:{line:5,column:11},end:{line:5,column:23}},"3":{start:{line:10,column:22},end:{line:10,column:62}},"4":{start:{line:12,column:32},end:{line:14,column:5}},"5":{start:{line:13,column:6},end:{line:13,column:37}},"6":{start:{line:15,column:4},end:{line:17,column:5}},"7":{start:{line:16,column:6},end:{line:16,column:76}},"8":{start:{line:21,column:4},end:{line:21,column:64}},"9":{start:{line:22,column:21},end:{line:22,column:69}},"10":{start:{line:23,column:20},end:{line:23,column:56}},"11":{start:{line:25,column:4},end:{line:25,column:46}},"12":{start:{line:27,column:27},end:{line:66,column:5}},"13":{start:{line:67,column:4},end:{line:84,column:5}},"14":{start:{line:69,column:23},end:{line:73,column:8}},"15":{start:{line:75,column:25},end:{line:78,column:8}},"16":{start:{line:79,column:6},end:{line:79,column:26}},"17":{start:{line:80,column:6},end:{line:80,column:55}},"18":{start:{line:82,column:6},end:{line:82,column:63}},"19":{start:{line:83,column:6},end:{line:83,column:79}},"20":{start:{line:86,column:4},end:{line:90,column:5}},"21":{start:{line:87,column:6},end:{line:87,column:58}},"22":{start:{line:89,column:6},end:{line:89,column:66}},"23":{start:{line:95,column:19},end:{line:95,column:21}},"24":{start:{line:96,column:4},end:{line:98,column:5}},"25":{start:{line:97,column:6},end:{line:97,column:37}},"26":{start:{line:99,column:4},end:{line:101,column:5}},"27":{start:{line:100,column:6},end:{line:100,column:53}},"28":{start:{line:102,column:4},end:{line:104,column:5}},"29":{start:{line:103,column:6},end:{line:103,column:39}},"30":{start:{line:105,column:4},end:{line:105,column:67}},"31":{start:{line:109,column:20},end:{line:121,column:6}},"32":{start:{line:122,column:4},end:{line:124,column:5}},"33":{start:{line:123,column:6},end:{line:123,column:56}},"34":{start:{line:127,column:21},end:{line:131,column:6}},"35":{start:{line:133,column:19},end:{line:133,column:35}},"36":{start:{line:134,column:4},end:{line:134,column:76}},"37":{start:{line:135,column:4},end:{line:135,column:31}},"38":{start:{line:136,column:4},end:{line:136,column:18}},"39":{start:{line:140,column:4},end:{line:140,column:63}},"40":{start:{line:141,column:20},end:{line:141,column:75}},"41":{start:{line:142,column:4},end:{line:144,column:5}},"42":{start:{line:143,column:6},end:{line:143,column:47}},"43":{start:{line:145,column:4},end:{line:145,column:85}},"44":{start:{line:145,column:27},end:{line:145,column:83}},"45":{start:{line:147,column:4},end:{line:149,column:5}},"46":{start:{line:148,column:6},end:{line:148,column:47}},"47":{start:{line:151,column:27},end:{line:197,column:5}},"48":{start:{line:199,column:4},end:{line:208,column:5}},"49":{start:{line:200,column:6},end:{line:204,column:9}},"50":{start:{line:206,column:6},end:{line:206,column:63}},"51":{start:{line:207,column:6},end:{line:207,column:79}},"52":{start:{line:210,column:4},end:{line:214,column:5}},"53":{start:{line:211,column:6},end:{line:211,column:42}},"54":{start:{line:213,column:6},end:{line:213,column:66}},"55":{start:{line:218,column:20},end:{line:218,column:75}},"56":{start:{line:219,column:4},end:{line:221,column:5}},"57":{start:{line:220,column:6},end:{line:220,column:56}},"58":{start:{line:223,column:4},end:{line:223,column:85}},"59":{start:{line:223,column:27},end:{line:223,column:83}},"60":{start:{line:226,column:17},end:{line:226,column:40}},"61":{start:{line:227,column:4},end:{line:232,column:5}},"62":{start:{line:227,column:23},end:{line:227,column:42}},"63":{start:{line:228,column:6},end:{line:231,column:8}},"64":{start:{line:234,column:4},end:{line:251,column:5}},"65":{start:{line:235,column:6},end:{line:246,column:7}},"66":{start:{line:236,column:8},end:{line:239,column:11}},"67":{start:{line:241,column:8},end:{line:241,column:65}},"68":{start:{line:242,column:8},end:{line:245,column:10}},"69":{start:{line:248,column:6},end:{line:248,column:53}},"70":{start:{line:250,column:6},end:{line:250,column:66}},"71":{start:{line:255,column:0},end:{line:255,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:2},end:{line:9,column:3}},loc:{start:{line:9,column:31},end:{line:18,column:3}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:47},end:{line:12,column:48}},loc:{start:{line:13,column:6},end:{line:13,column:37}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:20,column:2},end:{line:20,column:3}},loc:{start:{line:20,column:24},end:{line:91,column:3}},line:20},"3":{name:"(anonymous_3)",decl:{start:{line:93,column:2},end:{line:93,column:3}},loc:{start:{line:93,column:20},end:{line:106,column:3}},line:93},"4":{name:"(anonymous_4)",decl:{start:{line:108,column:2},end:{line:108,column:3}},loc:{start:{line:108,column:21},end:{line:137,column:3}},line:108},"5":{name:"(anonymous_5)",decl:{start:{line:139,column:2},end:{line:139,column:3}},loc:{start:{line:139,column:27},end:{line:215,column:3}},line:139},"6":{name:"(anonymous_6)",decl:{start:{line:217,column:2},end:{line:217,column:3}},loc:{start:{line:217,column:20},end:{line:252,column:3}},line:217},"7":{name:"(anonymous_7)",decl:{start:{line:227,column:18},end:{line:227,column:19}},loc:{start:{line:227,column:23},end:{line:227,column:42}},line:227}},branchMap:{"0":{loc:{start:{line:15,column:4},end:{line:17,column:5}},type:"if",locations:[{start:{line:15,column:4},end:{line:17,column:5}},{start:{line:15,column:4},end:{line:17,column:5}}],line:15},"1":{loc:{start:{line:96,column:4},end:{line:98,column:5}},type:"if",locations:[{start:{line:96,column:4},end:{line:98,column:5}},{start:{line:96,column:4},end:{line:98,column:5}}],line:96},"2":{loc:{start:{line:99,column:4},end:{line:101,column:5}},type:"if",locations:[{start:{line:99,column:4},end:{line:101,column:5}},{start:{line:99,column:4},end:{line:101,column:5}}],line:99},"3":{loc:{start:{line:102,column:4},end:{line:104,column:5}},type:"if",locations:[{start:{line:102,column:4},end:{line:104,column:5}},{start:{line:102,column:4},end:{line:104,column:5}}],line:102},"4":{loc:{start:{line:122,column:4},end:{line:124,column:5}},type:"if",locations:[{start:{line:122,column:4},end:{line:124,column:5}},{start:{line:122,column:4},end:{line:124,column:5}}],line:122},"5":{loc:{start:{line:142,column:4},end:{line:144,column:5}},type:"if",locations:[{start:{line:142,column:4},end:{line:144,column:5}},{start:{line:142,column:4},end:{line:144,column:5}}],line:142},"6":{loc:{start:{line:145,column:4},end:{line:145,column:85}},type:"if",locations:[{start:{line:145,column:4},end:{line:145,column:85}},{start:{line:145,column:4},end:{line:145,column:85}}],line:145},"7":{loc:{start:{line:147,column:4},end:{line:149,column:5}},type:"if",locations:[{start:{line:147,column:4},end:{line:149,column:5}},{start:{line:147,column:4},end:{line:149,column:5}}],line:147},"8":{loc:{start:{line:154,column:14},end:{line:154,column:41}},type:"binary-expr",locations:[{start:{line:154,column:14},end:{line:154,column:25}},{start:{line:154,column:29},end:{line:154,column:41}}],line:154},"9":{loc:{start:{line:163,column:22},end:{line:163,column:59}},type:"binary-expr",locations:[{start:{line:163,column:22},end:{line:163,column:38}},{start:{line:163,column:42},end:{line:163,column:59}}],line:163},"10":{loc:{start:{line:186,column:14},end:{line:186,column:53}},type:"binary-expr",locations:[{start:{line:186,column:14},end:{line:186,column:31}},{start:{line:186,column:35},end:{line:186,column:53}}],line:186},"11":{loc:{start:{line:187,column:21},end:{line:189,column:29}},type:"cond-expr",locations:[{start:{line:188,column:12},end:{line:188,column:28}},{start:{line:189,column:12},end:{line:189,column:29}}],line:187},"12":{loc:{start:{line:190,column:27},end:{line:192,column:28}},type:"cond-expr",locations:[{start:{line:191,column:12},end:{line:191,column:27}},{start:{line:192,column:12},end:{line:192,column:28}}],line:190},"13":{loc:{start:{line:193,column:16},end:{line:195,column:26}},type:"cond-expr",locations:[{start:{line:194,column:12},end:{line:194,column:25}},{start:{line:195,column:12},end:{line:195,column:26}}],line:193},"14":{loc:{start:{line:219,column:4},end:{line:221,column:5}},type:"if",locations:[{start:{line:219,column:4},end:{line:221,column:5}},{start:{line:219,column:4},end:{line:221,column:5}}],line:219},"15":{loc:{start:{line:223,column:4},end:{line:223,column:85}},type:"if",locations:[{start:{line:223,column:4},end:{line:223,column:85}},{start:{line:223,column:4},end:{line:223,column:85}}],line:223},"16":{loc:{start:{line:227,column:4},end:{line:232,column:5}},type:"if",locations:[{start:{line:227,column:4},end:{line:232,column:5}},{start:{line:227,column:4},end:{line:232,column:5}}],line:227}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"ca2d227896943ca67b36994c9ee30b57eb61328b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const TykService=(cov_79w0ms3bg.s[0]++,require('./tyk'));const Sequelize=(cov_79w0ms3bg.s[1]++,require('sequelize'));const Op=(cov_79w0ms3bg.s[2]++,Sequelize.Op);// https://tyk.io/docs/tyk-dashboard-api/api-definitions/
class ServiceService extends TykService{validateProtocols(targetUrl){cov_79w0ms3bg.f[0]++;const protocols=(cov_79w0ms3bg.s[3]++,['http','https','tcp','tls','tyk']);const isValidateProtocols=(cov_79w0ms3bg.s[4]++,protocols.some(p=>{cov_79w0ms3bg.f[1]++;cov_79w0ms3bg.s[5]++;return targetUrl.startsWith(`${p}://`);}));cov_79w0ms3bg.s[6]++;if(!isValidateProtocols){cov_79w0ms3bg.b[0][0]++;cov_79w0ms3bg.s[7]++;return this.ctx.throw(400,'invalidate protocols for the target url');}else{cov_79w0ms3bg.b[0][1]++;}}async create(service){cov_79w0ms3bg.f[2]++;cov_79w0ms3bg.s[8]++;this.ctx.logger.info('service create payload: %j',service);const defaults=(cov_79w0ms3bg.s[9]++,{authMode:true,active:true,deleted:false});const options=(cov_79w0ms3bg.s[10]++,Object.assign({},defaults,service));cov_79w0ms3bg.s[11]++;this.validateProtocols(options.targetUrl);// TODO: this part need to be rewrite as a wrapper
const apiDefinintion=(cov_79w0ms3bg.s[12]++,{api_definition:{name:options.name,auth:{auth_header_name:'Authorization'},definition:{location:'header',key:''},proxy:{target_url:options.targetUrl},version_data:{use_extended_paths:true,not_versioned:true,versions:{Default:{expires:'',name:'Default',paths:{ignored:[],white_list:[],black_list:[]},extended_paths:{ignored:[],white_list:[],black_list:[]},use_extended_paths:true}}},slug:options.accessSlug,use_keyless:!options.authMode,use_standard_auth:options.authMode,active:options.active}});cov_79w0ms3bg.s[13]++;try{// POST to create
const{Meta}=(cov_79w0ms3bg.s[14]++,await this.curl({method:'POST',endpoint:'/apis',payload:apiDefinintion}));// GET to retrieve api_id
const apiDetails=(cov_79w0ms3bg.s[15]++,await this.curl({method:'GET',endpoint:`/apis/${Meta}`}));cov_79w0ms3bg.s[16]++;options.meta=Meta;cov_79w0ms3bg.s[17]++;options.apiId=apiDetails.api_definition.api_id;}catch(error){cov_79w0ms3bg.s[18]++;this.ctx.logger.error('tyk api create error: %j',error);cov_79w0ms3bg.s[19]++;this.ctx.throw(400,`service can not be created: ${error.data.Message}`);}cov_79w0ms3bg.s[20]++;try{cov_79w0ms3bg.s[21]++;return await this.ctx.model.Service.create(options);}catch(error){cov_79w0ms3bg.s[22]++;this.ctx.throw(400,`service can not be created: ${error}`);}}async list(query){cov_79w0ms3bg.f[3]++;// trim undefined
const filter=(cov_79w0ms3bg.s[23]++,{});cov_79w0ms3bg.s[24]++;if(query.deleted!==undefined){cov_79w0ms3bg.b[1][0]++;cov_79w0ms3bg.s[25]++;filter.deleted=query.deleted;}else{cov_79w0ms3bg.b[1][1]++;}cov_79w0ms3bg.s[26]++;if(query.name!==undefined){cov_79w0ms3bg.b[2][0]++;cov_79w0ms3bg.s[27]++;filter.name={[Op.like]:`%${query.name}%`};}else{cov_79w0ms3bg.b[2][1]++;}cov_79w0ms3bg.s[28]++;if(query.authMode!==undefined){cov_79w0ms3bg.b[3][0]++;cov_79w0ms3bg.s[29]++;filter.authMode=query.authMode;}else{cov_79w0ms3bg.b[3][1]++;}cov_79w0ms3bg.s[30]++;return await this.ctx.model.Service.findAll({where:filter});}async findById(id){cov_79w0ms3bg.f[4]++;const service=(cov_79w0ms3bg.s[31]++,await this.ctx.model.Service.findOne({where:{id},include:[{model:this.ctx.model.Key,through:{attributes:[]},include:[{model:this.ctx.model.Application,as:'application'},{model:this.ctx.model.Policy,through:{attributes:[]}}]}]}));cov_79w0ms3bg.s[32]++;if(!service){cov_79w0ms3bg.b[4][0]++;cov_79w0ms3bg.s[33]++;this.ctx.throw(400,`service not found by ${id}`);}else{cov_79w0ms3bg.b[4][1]++;}// policies ctrls the service, could not apply to key
const policies=(cov_79w0ms3bg.s[34]++,await this.ctx.model.Policy.findAll({where:{accessRights:{[Op.contains]:[{serviceId:service.id.toString()}]}}}));const result=(cov_79w0ms3bg.s[35]++,service.toJSON());cov_79w0ms3bg.s[36]++;result.accessUrl=`${this.config.gateway.apiUrl}/${result.accessSlug}`;cov_79w0ms3bg.s[37]++;result.policies=policies;cov_79w0ms3bg.s[38]++;return result;}async update(values,id){cov_79w0ms3bg.f[5]++;cov_79w0ms3bg.s[39]++;this.ctx.logger.info('service update payload: %j',values);const service=(cov_79w0ms3bg.s[40]++,await this.ctx.model.Service.findOne({where:{id}}));cov_79w0ms3bg.s[41]++;if(!service){cov_79w0ms3bg.b[5][0]++;cov_79w0ms3bg.s[42]++;this.ctx.throw(400,'service not found');}else{cov_79w0ms3bg.b[5][1]++;}cov_79w0ms3bg.s[43]++;if(service.deleted){cov_79w0ms3bg.b[6][0]++;cov_79w0ms3bg.s[44]++;this.ctx.throw(400,'service has been deleted already');}else{cov_79w0ms3bg.b[6][1]++;}cov_79w0ms3bg.s[45]++;if(values.hasOwnProperty('targetUrl')){cov_79w0ms3bg.b[7][0]++;cov_79w0ms3bg.s[46]++;this.validateProtocols(values.targetUrl);}else{cov_79w0ms3bg.b[7][1]++;}// TODO: this part need to be rewrite as a wrapper
const apiDefinintion=(cov_79w0ms3bg.s[47]++,{api_definition:{org_id:this.config.gateway.orgId,name:(cov_79w0ms3bg.b[8][0]++,values.name)||(cov_79w0ms3bg.b[8][1]++,service.name),auth:{auth_header_name:'Authorization'},definition:{location:'header',key:''},proxy:{target_url:(cov_79w0ms3bg.b[9][0]++,values.targetUrl)||(cov_79w0ms3bg.b[9][1]++,service.targetUrl)},version_data:{use_extended_paths:true,not_versioned:true,versions:{Default:{expires:'',name:'Default',paths:{ignored:[],white_list:[],black_list:[]},extended_paths:{ignored:[],white_list:[],black_list:[]},use_extended_paths:true}}},slug:(cov_79w0ms3bg.b[10][0]++,values.accessSlug)||(cov_79w0ms3bg.b[10][1]++,service.accessSlug),use_keyless:values.hasOwnProperty('authMode')?(cov_79w0ms3bg.b[11][0]++,!values.authMode):(cov_79w0ms3bg.b[11][1]++,!service.authMode),use_standard_auth:values.hasOwnProperty('authMode')?(cov_79w0ms3bg.b[12][0]++,values.authMode):(cov_79w0ms3bg.b[12][1]++,service.authMode),active:values.hasOwnProperty('active')?(cov_79w0ms3bg.b[13][0]++,values.active):(cov_79w0ms3bg.b[13][1]++,service.active)}});cov_79w0ms3bg.s[48]++;try{cov_79w0ms3bg.s[49]++;await this.curl({method:'PUT',endpoint:`/apis/${service.meta}`,payload:apiDefinintion});}catch(error){cov_79w0ms3bg.s[50]++;this.ctx.logger.error('tyk api update error: %j',error);cov_79w0ms3bg.s[51]++;this.ctx.throw(400,`service can not be updated: ${error.data.Message}`);}cov_79w0ms3bg.s[52]++;try{cov_79w0ms3bg.s[53]++;return await service.update(values);}catch(error){cov_79w0ms3bg.s[54]++;this.ctx.throw(400,`service can not be updated: ${error}`);}}async destroy(id){cov_79w0ms3bg.f[6]++;const service=(cov_79w0ms3bg.s[55]++,await this.ctx.model.Service.findOne({where:{id}}));cov_79w0ms3bg.s[56]++;if(!service){cov_79w0ms3bg.b[14][0]++;cov_79w0ms3bg.s[57]++;this.ctx.throw(400,`service not found by ${id}`);}else{cov_79w0ms3bg.b[14][1]++;}cov_79w0ms3bg.s[58]++;if(service.deleted){cov_79w0ms3bg.b[15][0]++;cov_79w0ms3bg.s[59]++;this.ctx.throw(400,'service has been deleted already');}else{cov_79w0ms3bg.b[15][1]++;}// check related keys, if not all deleted, can not delete service.
const keys=(cov_79w0ms3bg.s[60]++,await service.getKeys());cov_79w0ms3bg.s[61]++;if(keys.some(k=>{cov_79w0ms3bg.f[7]++;cov_79w0ms3bg.s[62]++;return k.deleted===false;})){cov_79w0ms3bg.b[16][0]++;cov_79w0ms3bg.s[63]++;this.ctx.throw(400,'keys are associate with this service, can not delete the service');}else{cov_79w0ms3bg.b[16][1]++;}cov_79w0ms3bg.s[64]++;try{cov_79w0ms3bg.s[65]++;try{cov_79w0ms3bg.s[66]++;await this.curl({method:'DELETE',endpoint:`/apis/${service.meta}`});}catch(error){cov_79w0ms3bg.s[67]++;this.ctx.logger.error('tyk api delete error: %j',error);cov_79w0ms3bg.s[68]++;this.ctx.throw(400,`service can not be deleted: ${error.data.Message}`);}cov_79w0ms3bg.s[69]++;return await service.update({deleted:true});}catch(error){cov_79w0ms3bg.s[70]++;this.ctx.throw(400,`service can not be deleted: ${error}`);}}}cov_79w0ms3bg.s[71]++;module.exports=ServiceService;