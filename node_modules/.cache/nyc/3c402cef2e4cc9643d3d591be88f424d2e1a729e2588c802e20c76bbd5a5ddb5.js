'use strict';var cov_io3gzhhwo=function(){var path="/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/service/role.js";var hash="4b2dc660356f8d362c4b7a11fa178ac58ff72af8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/service/role.js",statementMap:{"0":{start:{line:3,column:16},end:{line:3,column:38}},"1":{start:{line:5,column:13},end:{line:5,column:53}},"2":{start:{line:9,column:4},end:{line:9,column:37}},"3":{start:{line:13,column:4},end:{line:13,column:36}},"4":{start:{line:17,column:20},end:{line:17,column:24}},"5":{start:{line:18,column:17},end:{line:18,column:39}},"6":{start:{line:19,column:4},end:{line:21,column:5}},"7":{start:{line:20,column:6},end:{line:20,column:17}},"8":{start:{line:22,column:4},end:{line:22,column:43}},"9":{start:{line:26,column:20},end:{line:26,column:24}},"10":{start:{line:27,column:4},end:{line:27,column:48}},"11":{start:{line:28,column:17},end:{line:28,column:40}},"12":{start:{line:29,column:4},end:{line:29,column:15}},"13":{start:{line:33,column:0},end:{line:33,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:2},end:{line:8,column:3}},loc:{start:{line:8,column:25},end:{line:10,column:3}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:2},end:{line:12,column:3}},loc:{start:{line:12,column:21},end:{line:14,column:3}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:16,column:2},end:{line:16,column:3}},loc:{start:{line:16,column:22},end:{line:23,column:3}},line:16},"3":{name:"(anonymous_3)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:29},end:{line:30,column:3}},line:25}},branchMap:{"0":{loc:{start:{line:19,column:4},end:{line:21,column:5}},type:"if",locations:[{start:{line:19,column:4},end:{line:21,column:5}},{start:{line:19,column:4},end:{line:21,column:5}}],line:19}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"4b2dc660356f8d362c4b7a11fa178ac58ff72af8"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Service=(cov_io3gzhhwo.s[0]++,require('egg').Service);const Role=(cov_io3gzhhwo.s[1]++,require('../../mockData/roleManagement'));class RoleService extends Service{async create(request){cov_io3gzhhwo.f[0]++;cov_io3gzhhwo.s[2]++;return await Role.create(request);}async list(query){cov_io3gzhhwo.f[1]++;cov_io3gzhhwo.s[3]++;return await Role.findAll(query);}async findById(id){cov_io3gzhhwo.f[2]++;const{ctx}=(cov_io3gzhhwo.s[4]++,this);const role=(cov_io3gzhhwo.s[5]++,await Role.findOne(id));cov_io3gzhhwo.s[6]++;if(role){cov_io3gzhhwo.b[0][0]++;cov_io3gzhhwo.s[7]++;return role;}else{cov_io3gzhhwo.b[0][1]++;}cov_io3gzhhwo.s[8]++;ctx.throw(404,`role(${id}) not found`);}async update(id,payload){cov_io3gzhhwo.f[3]++;const{ctx}=(cov_io3gzhhwo.s[9]++,this);cov_io3gzhhwo.s[10]++;ctx.logger.info('update %s,%j',id,payload);const role=(cov_io3gzhhwo.s[11]++,await this.findById(id));cov_io3gzhhwo.s[12]++;return role;}}cov_io3gzhhwo.s[13]++;module.exports=RoleService;