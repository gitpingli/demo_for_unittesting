'use strict';var cov_ph4qfxmvw=function(){var path="/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/controller/ums/auth.js";var hash="4aaf2b0dc8bec075bf1ad9472479ad49b64a44f3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/controller/ums/auth.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:44}},"1":{start:{line:17,column:20},end:{line:17,column:24}},"2":{start:{line:18,column:35},end:{line:18,column:51}},"3":{start:{line:20,column:4},end:{line:22,column:5}},"4":{start:{line:32,column:20},end:{line:32,column:24}},"5":{start:{line:33,column:4},end:{line:33,column:34}},"6":{start:{line:43,column:20},end:{line:43,column:24}},"7":{start:{line:44,column:4},end:{line:46,column:5}},"8":{start:{line:50,column:0},end:{line:50,column:31}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:2},end:{line:16,column:3}},loc:{start:{line:16,column:17},end:{line:23,column:3}},line:16},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:18},end:{line:34,column:3}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:42,column:2},end:{line:42,column:3}},loc:{start:{line:42,column:24},end:{line:47,column:3}},line:42}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"4aaf2b0dc8bec075bf1ad9472479ad49b64a44f3"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Controller=(cov_ph4qfxmvw.s[0]++,require('egg').Controller);/**
 * @Controller Auth
 */class AuthController extends Controller{/**
   * @Summary Login
   * @Router POST /login
   * @Request body loginUserPayload *body
   * @Response 200 authToken OK
   * @Response 500 error Unknown internal server error
   */async login(){cov_ph4qfxmvw.f[0]++;const{ctx}=(cov_ph4qfxmvw.s[1]++,this);const{username,password}=(cov_ph4qfxmvw.s[2]++,ctx.request.body);cov_ph4qfxmvw.s[3]++;ctx.body={data:await ctx.service.ums.agent.login(username,password)};}/**
   * @Summary logout
   * @Router POST /logout
   * @Response 200 user OK
   * @Response 500 error Unknown internal server error
   */async logout(){cov_ph4qfxmvw.f[1]++;const{ctx}=(cov_ph4qfxmvw.s[4]++,this);cov_ph4qfxmvw.s[5]++;ctx.logger.info('logout done');}/**
   * @Summary Get current loggedInUser
   * @Router GET /loggedInUser
   * @Response 200 user OK
   * @Response 500 error Unknown internal server error
   */async loggedInUser(){cov_ph4qfxmvw.f[2]++;const{ctx}=(cov_ph4qfxmvw.s[6]++,this);cov_ph4qfxmvw.s[7]++;ctx.body={data:await ctx.service.ums.agent.getLoggedInUser()};}}cov_ph4qfxmvw.s[8]++;module.exports=AuthController;