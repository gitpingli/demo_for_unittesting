'use strict';var cov_2em8o0ma8i=function(){var path="/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/service/gateway/service.js";var hash="9e73e734d5d4be292a52aad0516eec49137e83b0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/service/gateway/service.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:35}},"1":{start:{line:4,column:18},end:{line:4,column:38}},"2":{start:{line:5,column:11},end:{line:5,column:23}},"3":{start:{line:10,column:22},end:{line:10,column:60}},"4":{start:{line:12,column:32},end:{line:14,column:5}},"5":{start:{line:13,column:6},end:{line:13,column:37}},"6":{start:{line:15,column:4},end:{line:17,column:5}},"7":{start:{line:16,column:6},end:{line:16,column:72}},"8":{start:{line:21,column:19},end:{line:21,column:25}},"9":{start:{line:22,column:18},end:{line:22,column:58}},"10":{start:{line:23,column:4},end:{line:25,column:5}},"11":{start:{line:24,column:6},end:{line:24,column:77}},"12":{start:{line:29,column:4},end:{line:29,column:63}},"13":{start:{line:30,column:21},end:{line:30,column:69}},"14":{start:{line:31,column:20},end:{line:31,column:56}},"15":{start:{line:33,column:4},end:{line:33,column:45}},"16":{start:{line:34,column:4},end:{line:34,column:47}},"17":{start:{line:36,column:27},end:{line:75,column:5}},"18":{start:{line:76,column:4},end:{line:93,column:5}},"19":{start:{line:78,column:23},end:{line:82,column:8}},"20":{start:{line:84,column:25},end:{line:87,column:8}},"21":{start:{line:88,column:6},end:{line:88,column:25}},"22":{start:{line:89,column:6},end:{line:89,column:54}},"23":{start:{line:91,column:6},end:{line:91,column:62}},"24":{start:{line:92,column:6},end:{line:92,column:78}},"25":{start:{line:95,column:4},end:{line:99,column:5}},"26":{start:{line:96,column:6},end:{line:96,column:57}},"27":{start:{line:98,column:6},end:{line:98,column:65}},"28":{start:{line:104,column:19},end:{line:104,column:21}},"29":{start:{line:105,column:4},end:{line:107,column:5}},"30":{start:{line:106,column:6},end:{line:106,column:36}},"31":{start:{line:108,column:4},end:{line:110,column:5}},"32":{start:{line:109,column:6},end:{line:109,column:52}},"33":{start:{line:111,column:4},end:{line:113,column:5}},"34":{start:{line:112,column:6},end:{line:112,column:38}},"35":{start:{line:114,column:4},end:{line:114,column:66}},"36":{start:{line:118,column:20},end:{line:130,column:6}},"37":{start:{line:131,column:4},end:{line:133,column:5}},"38":{start:{line:132,column:6},end:{line:132,column:55}},"39":{start:{line:136,column:21},end:{line:140,column:6}},"40":{start:{line:142,column:19},end:{line:142,column:35}},"41":{start:{line:143,column:4},end:{line:143,column:75}},"42":{start:{line:144,column:4},end:{line:144,column:30}},"43":{start:{line:145,column:4},end:{line:145,column:17}},"44":{start:{line:149,column:4},end:{line:149,column:62}},"45":{start:{line:150,column:20},end:{line:150,column:75}},"46":{start:{line:151,column:4},end:{line:153,column:5}},"47":{start:{line:152,column:6},end:{line:152,column:46}},"48":{start:{line:154,column:4},end:{line:154,column:84}},"49":{start:{line:154,column:27},end:{line:154,column:82}},"50":{start:{line:156,column:4},end:{line:158,column:5}},"51":{start:{line:157,column:6},end:{line:157,column:46}},"52":{start:{line:159,column:4},end:{line:161,column:5}},"53":{start:{line:160,column:6},end:{line:160,column:48}},"54":{start:{line:163,column:27},end:{line:209,column:5}},"55":{start:{line:211,column:4},end:{line:220,column:5}},"56":{start:{line:212,column:6},end:{line:216,column:8}},"57":{start:{line:218,column:6},end:{line:218,column:62}},"58":{start:{line:219,column:6},end:{line:219,column:78}},"59":{start:{line:222,column:4},end:{line:226,column:5}},"60":{start:{line:223,column:6},end:{line:223,column:41}},"61":{start:{line:225,column:6},end:{line:225,column:65}},"62":{start:{line:230,column:20},end:{line:230,column:75}},"63":{start:{line:231,column:4},end:{line:233,column:5}},"64":{start:{line:232,column:6},end:{line:232,column:55}},"65":{start:{line:235,column:4},end:{line:235,column:84}},"66":{start:{line:235,column:27},end:{line:235,column:82}},"67":{start:{line:238,column:17},end:{line:238,column:40}},"68":{start:{line:239,column:4},end:{line:244,column:5}},"69":{start:{line:239,column:23},end:{line:239,column:42}},"70":{start:{line:240,column:6},end:{line:243,column:7}},"71":{start:{line:246,column:4},end:{line:263,column:5}},"72":{start:{line:247,column:6},end:{line:258,column:7}},"73":{start:{line:248,column:8},end:{line:251,column:10}},"74":{start:{line:253,column:8},end:{line:253,column:64}},"75":{start:{line:254,column:8},end:{line:257,column:9}},"76":{start:{line:260,column:6},end:{line:260,column:52}},"77":{start:{line:262,column:6},end:{line:262,column:65}},"78":{start:{line:267,column:0},end:{line:267,column:31}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:2},end:{line:9,column:3}},loc:{start:{line:9,column:32},end:{line:18,column:3}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:47},end:{line:12,column:48}},loc:{start:{line:13,column:6},end:{line:13,column:37}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:20,column:2},end:{line:20,column:3}},loc:{start:{line:20,column:34},end:{line:26,column:3}},line:20},"3":{name:"(anonymous_3)",decl:{start:{line:28,column:2},end:{line:28,column:3}},loc:{start:{line:28,column:25},end:{line:100,column:3}},line:28},"4":{name:"(anonymous_4)",decl:{start:{line:102,column:2},end:{line:102,column:3}},loc:{start:{line:102,column:21},end:{line:115,column:3}},line:102},"5":{name:"(anonymous_5)",decl:{start:{line:117,column:2},end:{line:117,column:3}},loc:{start:{line:117,column:22},end:{line:146,column:3}},line:117},"6":{name:"(anonymous_6)",decl:{start:{line:148,column:2},end:{line:148,column:3}},loc:{start:{line:148,column:28},end:{line:227,column:3}},line:148},"7":{name:"(anonymous_7)",decl:{start:{line:229,column:2},end:{line:229,column:3}},loc:{start:{line:229,column:21},end:{line:264,column:3}},line:229},"8":{name:"(anonymous_8)",decl:{start:{line:239,column:18},end:{line:239,column:19}},loc:{start:{line:239,column:23},end:{line:239,column:42}},line:239}},branchMap:{"0":{loc:{start:{line:15,column:4},end:{line:17,column:5}},type:"if",locations:[{start:{line:15,column:4},end:{line:17,column:5}},{start:{line:15,column:4},end:{line:17,column:5}}],line:15},"1":{loc:{start:{line:23,column:4},end:{line:25,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:25,column:5}},{start:{line:23,column:4},end:{line:25,column:5}}],line:23},"2":{loc:{start:{line:105,column:4},end:{line:107,column:5}},type:"if",locations:[{start:{line:105,column:4},end:{line:107,column:5}},{start:{line:105,column:4},end:{line:107,column:5}}],line:105},"3":{loc:{start:{line:108,column:4},end:{line:110,column:5}},type:"if",locations:[{start:{line:108,column:4},end:{line:110,column:5}},{start:{line:108,column:4},end:{line:110,column:5}}],line:108},"4":{loc:{start:{line:111,column:4},end:{line:113,column:5}},type:"if",locations:[{start:{line:111,column:4},end:{line:113,column:5}},{start:{line:111,column:4},end:{line:113,column:5}}],line:111},"5":{loc:{start:{line:131,column:4},end:{line:133,column:5}},type:"if",locations:[{start:{line:131,column:4},end:{line:133,column:5}},{start:{line:131,column:4},end:{line:133,column:5}}],line:131},"6":{loc:{start:{line:151,column:4},end:{line:153,column:5}},type:"if",locations:[{start:{line:151,column:4},end:{line:153,column:5}},{start:{line:151,column:4},end:{line:153,column:5}}],line:151},"7":{loc:{start:{line:154,column:4},end:{line:154,column:84}},type:"if",locations:[{start:{line:154,column:4},end:{line:154,column:84}},{start:{line:154,column:4},end:{line:154,column:84}}],line:154},"8":{loc:{start:{line:156,column:4},end:{line:158,column:5}},type:"if",locations:[{start:{line:156,column:4},end:{line:158,column:5}},{start:{line:156,column:4},end:{line:158,column:5}}],line:156},"9":{loc:{start:{line:159,column:4},end:{line:161,column:5}},type:"if",locations:[{start:{line:159,column:4},end:{line:161,column:5}},{start:{line:159,column:4},end:{line:161,column:5}}],line:159},"10":{loc:{start:{line:166,column:14},end:{line:166,column:41}},type:"binary-expr",locations:[{start:{line:166,column:14},end:{line:166,column:25}},{start:{line:166,column:29},end:{line:166,column:41}}],line:166},"11":{loc:{start:{line:175,column:22},end:{line:175,column:59}},type:"binary-expr",locations:[{start:{line:175,column:22},end:{line:175,column:38}},{start:{line:175,column:42},end:{line:175,column:59}}],line:175},"12":{loc:{start:{line:198,column:14},end:{line:198,column:53}},type:"binary-expr",locations:[{start:{line:198,column:14},end:{line:198,column:31}},{start:{line:198,column:35},end:{line:198,column:53}}],line:198},"13":{loc:{start:{line:199,column:21},end:{line:201,column:29}},type:"cond-expr",locations:[{start:{line:200,column:12},end:{line:200,column:28}},{start:{line:201,column:12},end:{line:201,column:29}}],line:199},"14":{loc:{start:{line:202,column:27},end:{line:204,column:28}},type:"cond-expr",locations:[{start:{line:203,column:12},end:{line:203,column:27}},{start:{line:204,column:12},end:{line:204,column:28}}],line:202},"15":{loc:{start:{line:205,column:16},end:{line:207,column:26}},type:"cond-expr",locations:[{start:{line:206,column:12},end:{line:206,column:25}},{start:{line:207,column:12},end:{line:207,column:26}}],line:205},"16":{loc:{start:{line:231,column:4},end:{line:233,column:5}},type:"if",locations:[{start:{line:231,column:4},end:{line:233,column:5}},{start:{line:231,column:4},end:{line:233,column:5}}],line:231},"17":{loc:{start:{line:235,column:4},end:{line:235,column:84}},type:"if",locations:[{start:{line:235,column:4},end:{line:235,column:84}},{start:{line:235,column:4},end:{line:235,column:84}}],line:235},"18":{loc:{start:{line:239,column:4},end:{line:244,column:5}},type:"if",locations:[{start:{line:239,column:4},end:{line:244,column:5}},{start:{line:239,column:4},end:{line:244,column:5}}],line:239}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"9e73e734d5d4be292a52aad0516eec49137e83b0"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const TykService=(cov_2em8o0ma8i.s[0]++,require('./tyk'));const Sequelize=(cov_2em8o0ma8i.s[1]++,require('sequelize'));const Op=(cov_2em8o0ma8i.s[2]++,Sequelize.Op);// https://tyk.io/docs/tyk-dashboard-api/api-definitions/
class ServiceService extends TykService{validateProtocols(targetUrl){cov_2em8o0ma8i.f[0]++;const protocols=(cov_2em8o0ma8i.s[3]++,['http','https','tcp','tls','tyk']);const isValidateProtocols=(cov_2em8o0ma8i.s[4]++,protocols.some(p=>{cov_2em8o0ma8i.f[1]++;cov_2em8o0ma8i.s[5]++;return targetUrl.startsWith(`${p}://`);}));cov_2em8o0ma8i.s[6]++;if(!isValidateProtocols){cov_2em8o0ma8i.b[0][0]++;cov_2em8o0ma8i.s[7]++;return this.ctx.throw(400,'invalid protocols for the target url');}else{cov_2em8o0ma8i.b[0][1]++;}}validateAccessSlug(accessSlug){cov_2em8o0ma8i.f[2]++;const patten=(cov_2em8o0ma8i.s[8]++,/^\/+/);const match=(cov_2em8o0ma8i.s[9]++,new RegExp(patten,'g').test(accessSlug));cov_2em8o0ma8i.s[10]++;if(match){cov_2em8o0ma8i.b[1][0]++;cov_2em8o0ma8i.s[11]++;return this.ctx.throw(400,'invalid access slug, no leading / allowed');}else{cov_2em8o0ma8i.b[1][1]++;}}async create(service){cov_2em8o0ma8i.f[3]++;cov_2em8o0ma8i.s[12]++;this.ctx.logger.info('service create payload: %j',service);const defaults=(cov_2em8o0ma8i.s[13]++,{authMode:true,active:true,deleted:false});const options=(cov_2em8o0ma8i.s[14]++,Object.assign({},defaults,service));cov_2em8o0ma8i.s[15]++;this.validateProtocols(options.targetUrl);cov_2em8o0ma8i.s[16]++;this.validateAccessSlug(options.accessSlug);// TODO: this part need to be rewrite as a wrapper
const apiDefinintion=(cov_2em8o0ma8i.s[17]++,{api_definition:{name:options.name,auth:{auth_header_name:'X-API-Key'},definition:{location:'header',key:''},proxy:{target_url:options.targetUrl},version_data:{use_extended_paths:true,not_versioned:true,versions:{Default:{expires:'',name:'Default',paths:{ignored:[],white_list:[],black_list:[]},extended_paths:{ignored:[],white_list:[],black_list:[]},use_extended_paths:true}}},slug:options.accessSlug,use_keyless:!options.authMode,use_standard_auth:options.authMode,active:options.active}});cov_2em8o0ma8i.s[18]++;try{// POST to create
const{Meta}=(cov_2em8o0ma8i.s[19]++,await this.curl({method:'POST',endpoint:'/apis',payload:apiDefinintion}));// GET to retrieve api_id
const apiDetails=(cov_2em8o0ma8i.s[20]++,await this.curl({method:'GET',endpoint:`/apis/${Meta}`}));cov_2em8o0ma8i.s[21]++;options.meta=Meta;cov_2em8o0ma8i.s[22]++;options.apiId=apiDetails.api_definition.api_id;}catch(error){cov_2em8o0ma8i.s[23]++;this.ctx.logger.error('tyk api create error: %j',error);cov_2em8o0ma8i.s[24]++;this.ctx.throw(400,`service can not be created: ${error.data.Message}`);}cov_2em8o0ma8i.s[25]++;try{cov_2em8o0ma8i.s[26]++;return await this.ctx.model.Service.create(options);}catch(error){cov_2em8o0ma8i.s[27]++;this.ctx.throw(400,`service can not be created: ${error}`);}}async list(query){cov_2em8o0ma8i.f[4]++;// trim undefined
const filter=(cov_2em8o0ma8i.s[28]++,{});cov_2em8o0ma8i.s[29]++;if(query.deleted!==undefined){cov_2em8o0ma8i.b[2][0]++;cov_2em8o0ma8i.s[30]++;filter.deleted=query.deleted;}else{cov_2em8o0ma8i.b[2][1]++;}cov_2em8o0ma8i.s[31]++;if(query.name!==undefined){cov_2em8o0ma8i.b[3][0]++;cov_2em8o0ma8i.s[32]++;filter.name={[Op.like]:`%${query.name}%`};}else{cov_2em8o0ma8i.b[3][1]++;}cov_2em8o0ma8i.s[33]++;if(query.authMode!==undefined){cov_2em8o0ma8i.b[4][0]++;cov_2em8o0ma8i.s[34]++;filter.authMode=query.authMode;}else{cov_2em8o0ma8i.b[4][1]++;}cov_2em8o0ma8i.s[35]++;return await this.ctx.model.Service.findAll({where:filter});}async findById(id){cov_2em8o0ma8i.f[5]++;const service=(cov_2em8o0ma8i.s[36]++,await this.ctx.model.Service.findOne({where:{id},include:[{model:this.ctx.model.Key,through:{attributes:[]},include:[{model:this.ctx.model.Application,as:'application'},{model:this.ctx.model.Policy,through:{attributes:[]}}]}]}));cov_2em8o0ma8i.s[37]++;if(!service){cov_2em8o0ma8i.b[5][0]++;cov_2em8o0ma8i.s[38]++;this.ctx.throw(400,`service not found by ${id}`);}else{cov_2em8o0ma8i.b[5][1]++;}// policies ctrls the service, could not apply to key
const policies=(cov_2em8o0ma8i.s[39]++,await this.ctx.model.Policy.findAll({where:{accessRights:{[Op.contains]:[{serviceId:service.id.toString()}]}}}));const result=(cov_2em8o0ma8i.s[40]++,service.toJSON());cov_2em8o0ma8i.s[41]++;result.accessUrl=`${this.config.gateway.apiUrl}/${result.accessSlug}`;cov_2em8o0ma8i.s[42]++;result.policies=policies;cov_2em8o0ma8i.s[43]++;return result;}async update(values,id){cov_2em8o0ma8i.f[6]++;cov_2em8o0ma8i.s[44]++;this.ctx.logger.info('service update payload: %j',values);const service=(cov_2em8o0ma8i.s[45]++,await this.ctx.model.Service.findOne({where:{id}}));cov_2em8o0ma8i.s[46]++;if(!service){cov_2em8o0ma8i.b[6][0]++;cov_2em8o0ma8i.s[47]++;this.ctx.throw(400,'service not found');}else{cov_2em8o0ma8i.b[6][1]++;}cov_2em8o0ma8i.s[48]++;if(service.deleted){cov_2em8o0ma8i.b[7][0]++;cov_2em8o0ma8i.s[49]++;this.ctx.throw(400,'service has been deleted already');}else{cov_2em8o0ma8i.b[7][1]++;}cov_2em8o0ma8i.s[50]++;if(Object.prototype.hasOwnProperty.call(values,'targetUrl')){cov_2em8o0ma8i.b[8][0]++;cov_2em8o0ma8i.s[51]++;this.validateProtocols(values.targetUrl);}else{cov_2em8o0ma8i.b[8][1]++;}cov_2em8o0ma8i.s[52]++;if(Object.prototype.hasOwnProperty.call(values,'accessSlug')){cov_2em8o0ma8i.b[9][0]++;cov_2em8o0ma8i.s[53]++;this.validateAccessSlug(values.accessSlug);}else{cov_2em8o0ma8i.b[9][1]++;}// TODO: this part need to be rewrite as a wrapper
const apiDefinintion=(cov_2em8o0ma8i.s[54]++,{api_definition:{org_id:this.config.gateway.orgId,name:(cov_2em8o0ma8i.b[10][0]++,values.name)||(cov_2em8o0ma8i.b[10][1]++,service.name),auth:{auth_header_name:'Authorization'},definition:{location:'header',key:''},proxy:{target_url:(cov_2em8o0ma8i.b[11][0]++,values.targetUrl)||(cov_2em8o0ma8i.b[11][1]++,service.targetUrl)},version_data:{use_extended_paths:true,not_versioned:true,versions:{Default:{expires:'',name:'Default',paths:{ignored:[],white_list:[],black_list:[]},extended_paths:{ignored:[],white_list:[],black_list:[]},use_extended_paths:true}}},slug:(cov_2em8o0ma8i.b[12][0]++,values.accessSlug)||(cov_2em8o0ma8i.b[12][1]++,service.accessSlug),use_keyless:Object.prototype.hasOwnProperty.call(values,'authMode')?(cov_2em8o0ma8i.b[13][0]++,!values.authMode):(cov_2em8o0ma8i.b[13][1]++,!service.authMode),use_standard_auth:Object.prototype.hasOwnProperty.call(values,'authMode')?(cov_2em8o0ma8i.b[14][0]++,values.authMode):(cov_2em8o0ma8i.b[14][1]++,service.authMode),active:Object.prototype.hasOwnProperty.call(values,'active')?(cov_2em8o0ma8i.b[15][0]++,values.active):(cov_2em8o0ma8i.b[15][1]++,service.active)}});cov_2em8o0ma8i.s[55]++;try{cov_2em8o0ma8i.s[56]++;await this.curl({method:'PUT',endpoint:`/apis/${service.meta}`,payload:apiDefinintion});}catch(error){cov_2em8o0ma8i.s[57]++;this.ctx.logger.error('tyk api update error: %j',error);cov_2em8o0ma8i.s[58]++;this.ctx.throw(400,`service can not be updated: ${error.data.Message}`);}cov_2em8o0ma8i.s[59]++;try{cov_2em8o0ma8i.s[60]++;return await service.update(values);}catch(error){cov_2em8o0ma8i.s[61]++;this.ctx.throw(400,`service can not be updated: ${error}`);}}async destroy(id){cov_2em8o0ma8i.f[7]++;const service=(cov_2em8o0ma8i.s[62]++,await this.ctx.model.Service.findOne({where:{id}}));cov_2em8o0ma8i.s[63]++;if(!service){cov_2em8o0ma8i.b[16][0]++;cov_2em8o0ma8i.s[64]++;this.ctx.throw(400,`service not found by ${id}`);}else{cov_2em8o0ma8i.b[16][1]++;}cov_2em8o0ma8i.s[65]++;if(service.deleted){cov_2em8o0ma8i.b[17][0]++;cov_2em8o0ma8i.s[66]++;this.ctx.throw(400,'service has been deleted already');}else{cov_2em8o0ma8i.b[17][1]++;}// check related keys, if not all deleted, can not delete service.
const keys=(cov_2em8o0ma8i.s[67]++,await service.getKeys());cov_2em8o0ma8i.s[68]++;if(keys.some(k=>{cov_2em8o0ma8i.f[8]++;cov_2em8o0ma8i.s[69]++;return k.deleted===false;})){cov_2em8o0ma8i.b[18][0]++;cov_2em8o0ma8i.s[70]++;this.ctx.throw(400,'keys are associate with this service, can not delete the service');}else{cov_2em8o0ma8i.b[18][1]++;}cov_2em8o0ma8i.s[71]++;try{cov_2em8o0ma8i.s[72]++;try{cov_2em8o0ma8i.s[73]++;await this.curl({method:'DELETE',endpoint:`/apis/${service.meta}`});}catch(error){cov_2em8o0ma8i.s[74]++;this.ctx.logger.error('tyk api delete error: %j',error);cov_2em8o0ma8i.s[75]++;this.ctx.throw(400,`service can not be deleted: ${error.data.Message}`);}cov_2em8o0ma8i.s[76]++;return await service.update({deleted:true});}catch(error){cov_2em8o0ma8i.s[77]++;this.ctx.throw(400,`service can not be deleted: ${error}`);}}}cov_2em8o0ma8i.s[78]++;module.exports=ServiceService;