'use strict';var cov_262gkwu3zj=function(){var path="/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/controller/workflow/versions.js";var hash="8e97c176d4f0d5e68b6d490cf0857fbaf0f3e5c2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/controller/workflow/versions.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:44}},"1":{start:{line:9,column:20},end:{line:9,column:24}},"2":{start:{line:10,column:16},end:{line:15,column:5}},"3":{start:{line:16,column:4},end:{line:16,column:46}},"4":{start:{line:26,column:20},end:{line:26,column:24}},"5":{start:{line:27,column:30},end:{line:27,column:40}},"6":{start:{line:29,column:21},end:{line:29,column:91}},"7":{start:{line:31,column:4},end:{line:33,column:5}},"8":{start:{line:37,column:0},end:{line:37,column:43}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:2},end:{line:8,column:3}},loc:{start:{line:8,column:41},end:{line:17,column:3}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:17},end:{line:34,column:3}},line:25}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"8e97c176d4f0d5e68b6d490cf0857fbaf0f3e5c2"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Controller=(cov_262gkwu3zj.s[0]++,require('egg').Controller);/**
 * @Controller Workflow_Versions Management
 */class WorkflowVersionsController extends Controller{async curl(method,endpoint,payload){cov_262gkwu3zj.f[0]++;const{ctx}=(cov_262gkwu3zj.s[1]++,this);const req=(cov_262gkwu3zj.s[2]++,{name:'workflow',method,endpoint,payload});cov_262gkwu3zj.s[3]++;return await ctx.service.backend.curl(req);}/**
   * @Summary List a deployed bpmn versions
   * @Router GET /workflows/{bpmnProcessId}/versions
   * @Response 200
   * @Response 500 error Unknown internal server error
   */async index(){cov_262gkwu3zj.f[1]++;const{ctx}=(cov_262gkwu3zj.s[4]++,this);const{bpmnProcessId}=(cov_262gkwu3zj.s[5]++,ctx.params);const versions=(cov_262gkwu3zj.s[6]++,await this.curl('GET',`/workflows/v1/bpmnProcesses/${bpmnProcessId}`));cov_262gkwu3zj.s[7]++;ctx.body={data:versions.workflows};}}cov_262gkwu3zj.s[8]++;module.exports=WorkflowVersionsController;