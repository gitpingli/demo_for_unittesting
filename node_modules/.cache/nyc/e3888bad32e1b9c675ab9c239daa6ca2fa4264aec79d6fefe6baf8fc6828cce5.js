'use strict';var cov_cc5o3bi7m=function(){var path="/home/htchen/console-core-service-sherpa/app/controller/cpq/offering.js";var hash="282ae426fd39f10a69296597c43b255e18dde973";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/htchen/console-core-service-sherpa/app/controller/cpq/offering.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:44}},"1":{start:{line:4,column:10},end:{line:4,column:27}},"2":{start:{line:21,column:20},end:{line:21,column:24}},"3":{start:{line:22,column:18},end:{line:25,column:5}},"4":{start:{line:26,column:17},end:{line:26,column:65}},"5":{start:{line:27,column:17},end:{line:31,column:5}},"6":{start:{line:32,column:18},end:{line:32,column:51}},"7":{start:{line:33,column:16},end:{line:33,column:38}},"8":{start:{line:34,column:4},end:{line:37,column:6}},"9":{start:{line:49,column:20},end:{line:49,column:24}},"10":{start:{line:50,column:19},end:{line:50,column:29}},"11":{start:{line:52,column:4},end:{line:54,column:6}},"12":{start:{line:58,column:0},end:{line:58,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:2},end:{line:20,column:3}},loc:{start:{line:20,column:16},end:{line:38,column:3}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:48,column:2},end:{line:48,column:3}},loc:{start:{line:48,column:15},end:{line:55,column:3}},line:48}},branchMap:{"0":{loc:{start:{line:23,column:33},end:{line:23,column:77}},type:"cond-expr",locations:[{start:{line:23,column:54},end:{line:23,column:72}},{start:{line:23,column:75},end:{line:23,column:77}}],line:23},"1":{loc:{start:{line:24,column:29},end:{line:24,column:64}},type:"cond-expr",locations:[{start:{line:24,column:46},end:{line:24,column:60}},{start:{line:24,column:63},end:{line:24,column:64}}],line:24}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"282ae426fd39f10a69296597c43b255e18dde973"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Controller=(cov_cc5o3bi7m.s[0]++,require('egg').Controller);const _=(cov_cc5o3bi7m.s[1]++,require('lodash'));/**
 * @Controller Offering Management
 */class ProductController extends Controller{/**
   * @Summary List all existing offerings
   * @Router GET /offerings
   * @Request query string provider
   * @Request query string type
   * @Request query string pageSize
   * @Request query string page
   * @Response 200 offeringList OK
   * @Response 500 error Unknown internal server error
   */async index(){cov_cc5o3bi7m.f[0]++;const{ctx}=(cov_cc5o3bi7m.s[2]++,this);const query=(cov_cc5o3bi7m.s[3]++,{pageSize:ctx.helper.toInt(ctx.query.pageSize?(cov_cc5o3bi7m.b[0][0]++,ctx.query.pageSize):(cov_cc5o3bi7m.b[0][1]++,10)),page:ctx.helper.toInt(ctx.query.page?(cov_cc5o3bi7m.b[1][0]++,ctx.query.page):(cov_cc5o3bi7m.b[1][1]++,1))});const data=(cov_cc5o3bi7m.s[4]++,await ctx.service.cpq.offering.search(ctx.query));const meta=(cov_cc5o3bi7m.s[5]++,{total:data.length,page:query.page,per_page:query.pageSize});const start=(cov_cc5o3bi7m.s[6]++,(query.page-1)*query.pageSize);const end=(cov_cc5o3bi7m.s[7]++,start+query.pageSize);cov_cc5o3bi7m.s[8]++;ctx.body={data:_.slice(data,start,end),meta};}/**
   * @Summary Get a offering by Id
   * @Router GET /offerings/{id}
   * @Request path string *id
   * @Response 200 offering OK
   * @Response 404 offering not found
   * @Response 500 error Unknown internal server error
   */async show(){cov_cc5o3bi7m.f[1]++;const{ctx}=(cov_cc5o3bi7m.s[9]++,this);const{id}=(cov_cc5o3bi7m.s[10]++,ctx.params);cov_cc5o3bi7m.s[11]++;ctx.body={data:await ctx.service.cpq.offering.findOne(id)};}}cov_cc5o3bi7m.s[12]++;module.exports=ProductController;