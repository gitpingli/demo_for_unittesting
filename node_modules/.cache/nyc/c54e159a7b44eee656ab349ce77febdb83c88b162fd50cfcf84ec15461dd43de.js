'use strict';var cov_2q30fb8lws=function(){var path="/home/htchen/console-core-service-sherpa/app/controller/contract.js";var hash="db393f1b2378507ebca5903f60a0b9ba96a3d330";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/htchen/console-core-service-sherpa/app/controller/contract.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:44}},"1":{start:{line:17,column:20},end:{line:17,column:24}},"2":{start:{line:18,column:21},end:{line:18,column:32}},"3":{start:{line:19,column:4},end:{line:19,column:54}},"4":{start:{line:22,column:4},end:{line:26,column:6}},"5":{start:{line:27,column:4},end:{line:27,column:21}},"6":{start:{line:31,column:0},end:{line:31,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:2},end:{line:16,column:3}},loc:{start:{line:16,column:17},end:{line:28,column:3}},line:16}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"db393f1b2378507ebca5903f60a0b9ba96a3d330"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Controller=(cov_2q30fb8lws.s[0]++,require('egg').Controller);/**
 * @Controller Contract
 */class ContractController extends Controller{/**
   * @Summary Create a contract
   * @Router POST /contracts
   * @Request body createContractPayload *body
   * @Response 200 contract OK
   * @Response 500 error Unknown internal server error
   */async create(){cov_2q30fb8lws.f[0]++;const{ctx}=(cov_2q30fb8lws.s[1]++,this);const{body}=(cov_2q30fb8lws.s[2]++,ctx.request);cov_2q30fb8lws.s[3]++;ctx.logger.info('createContractRequest:%j',body);// TODO:FIXME integration with CPQ
cov_2q30fb8lws.s[4]++;ctx.body={data:{id:'FAKED_CONTRACT_ID'}};cov_2q30fb8lws.s[5]++;ctx.status=200;}}cov_2q30fb8lws.s[6]++;module.exports=ContractController;