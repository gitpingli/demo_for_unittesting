'use strict';var cov_18ft6k127v=function(){var path="/home/htchen/console-core-service-sherpa/app/controller/workflow/definition.js";var hash="9b9bc1b028f1379ff0c04fcf9f08742085459a3b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/htchen/console-core-service-sherpa/app/controller/workflow/definition.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:44}},"1":{start:{line:4,column:10},end:{line:4,column:27}},"2":{start:{line:11,column:20},end:{line:11,column:24}},"3":{start:{line:12,column:16},end:{line:17,column:5}},"4":{start:{line:18,column:4},end:{line:18,column:47}},"5":{start:{line:29,column:20},end:{line:29,column:24}},"6":{start:{line:30,column:18},end:{line:33,column:5}},"7":{start:{line:34,column:21},end:{line:34,column:106}},"8":{start:{line:35,column:22},end:{line:35,column:40}},"9":{start:{line:36,column:19},end:{line:66,column:7}},"10":{start:{line:37,column:26},end:{line:37,column:85}},"11":{start:{line:38,column:32},end:{line:38,column:103}},"12":{start:{line:39,column:32},end:{line:39,column:95}},"13":{start:{line:40,column:6},end:{line:65,column:8}},"14":{start:{line:48,column:10},end:{line:52,column:12}},"15":{start:{line:55,column:10},end:{line:63,column:12}},"16":{start:{line:67,column:17},end:{line:71,column:5}},"17":{start:{line:72,column:4},end:{line:75,column:6}},"18":{start:{line:89,column:20},end:{line:89,column:24}},"19":{start:{line:90,column:19},end:{line:90,column:29}},"20":{start:{line:92,column:22},end:{line:92,column:67}},"21":{start:{line:93,column:17},end:{line:95,column:6}},"22":{start:{line:94,column:6},end:{line:94,column:66}},"23":{start:{line:96,column:19},end:{line:126,column:7}},"24":{start:{line:97,column:26},end:{line:97,column:85}},"25":{start:{line:98,column:32},end:{line:98,column:103}},"26":{start:{line:99,column:32},end:{line:99,column:95}},"27":{start:{line:100,column:6},end:{line:125,column:8}},"28":{start:{line:108,column:10},end:{line:112,column:12}},"29":{start:{line:115,column:10},end:{line:123,column:12}},"30":{start:{line:127,column:4},end:{line:129,column:6}},"31":{start:{line:139,column:20},end:{line:139,column:24}},"32":{start:{line:140,column:15},end:{line:140,column:28}},"33":{start:{line:142,column:17},end:{line:142,column:37}},"34":{start:{line:143,column:4},end:{line:143,column:32}},"35":{start:{line:144,column:21},end:{line:144,column:59}},"36":{start:{line:146,column:4},end:{line:154,column:5}},"37":{start:{line:147,column:6},end:{line:149,column:8}},"38":{start:{line:153,column:6},end:{line:153,column:40}},"39":{start:{line:159,column:0},end:{line:159,column:46}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:2},end:{line:10,column:3}},loc:{start:{line:10,column:40},end:{line:19,column:3}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:2},end:{line:28,column:3}},loc:{start:{line:28,column:16},end:{line:76,column:3}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:36,column:54},end:{line:36,column:55}},loc:{start:{line:36,column:72},end:{line:66,column:5}},line:36},"3":{name:"(anonymous_3)",decl:{start:{line:47,column:44},end:{line:47,column:45}},loc:{start:{line:47,column:64},end:{line:53,column:9}},line:47},"4":{name:"(anonymous_4)",decl:{start:{line:54,column:44},end:{line:54,column:45}},loc:{start:{line:54,column:64},end:{line:64,column:9}},line:54},"5":{name:"(anonymous_5)",decl:{start:{line:88,column:2},end:{line:88,column:3}},loc:{start:{line:88,column:15},end:{line:130,column:3}},line:88},"6":{name:"(anonymous_6)",decl:{start:{line:93,column:37},end:{line:93,column:38}},loc:{start:{line:93,column:49},end:{line:95,column:5}},line:93},"7":{name:"(anonymous_7)",decl:{start:{line:96,column:49},end:{line:96,column:50}},loc:{start:{line:96,column:67},end:{line:126,column:5}},line:96},"8":{name:"(anonymous_8)",decl:{start:{line:107,column:44},end:{line:107,column:45}},loc:{start:{line:107,column:64},end:{line:113,column:9}},line:107},"9":{name:"(anonymous_9)",decl:{start:{line:114,column:44},end:{line:114,column:45}},loc:{start:{line:114,column:64},end:{line:124,column:9}},line:114},"10":{name:"(anonymous_10)",decl:{start:{line:138,column:2},end:{line:138,column:3}},loc:{start:{line:138,column:17},end:{line:156,column:3}},line:138}},branchMap:{"0":{loc:{start:{line:31,column:33},end:{line:31,column:77}},type:"cond-expr",locations:[{start:{line:31,column:54},end:{line:31,column:72}},{start:{line:31,column:75},end:{line:31,column:77}}],line:31},"1":{loc:{start:{line:32,column:29},end:{line:32,column:64}},type:"cond-expr",locations:[{start:{line:32,column:46},end:{line:32,column:60}},{start:{line:32,column:63},end:{line:32,column:64}}],line:32}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"9b9bc1b028f1379ff0c04fcf9f08742085459a3b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Controller=(cov_18ft6k127v.s[0]++,require('egg').Controller);const _=(cov_18ft6k127v.s[1]++,require('lodash'));/**
 * @Controller Workflow_Definition Management
 */class WorkflowDeploymentController extends Controller{async curl(method,endpoint,payload){cov_18ft6k127v.f[0]++;const{ctx}=(cov_18ft6k127v.s[2]++,this);const req=(cov_18ft6k127v.s[3]++,{name:'workflow',method,endpoint,payload});cov_18ft6k127v.s[4]++;return await ctx.service.backend.curl(req);}/**
   * @Summary List all deployed bpmns
   * @Router GET /workflows/definitions
   * @Request query string pageSize
   * @Request query string page
   * @Response 200
   * @Response 500 error Unknown internal server error
   */async index(){cov_18ft6k127v.f[1]++;const{ctx}=(cov_18ft6k127v.s[5]++,this);const query=(cov_18ft6k127v.s[6]++,{pageSize:ctx.helper.toInt(ctx.query.pageSize?(cov_18ft6k127v.b[0][0]++,ctx.query.pageSize):(cov_18ft6k127v.b[0][1]++,10)),page:ctx.helper.toInt(ctx.query.page?(cov_18ft6k127v.b[1][0]++,ctx.query.page):(cov_18ft6k127v.b[1][1]++,1))});const response=(cov_18ft6k127v.s[7]++,await this.curl('GET',`/workflows/v1?page=${query.page}&pageSize=${query.pageSize}`));const workflows=(cov_18ft6k127v.s[8]++,response.workflows);const result=(cov_18ft6k127v.s[9]++,await Promise.all(_.map(workflows,async workflow=>{cov_18ft6k127v.f[2]++;const workflowKey=(cov_18ft6k127v.s[10]++,workflow.sourceAsMap.value.deployedWorkflows[0].workflowKey);const workflowInstances=(cov_18ft6k127v.s[11]++,await this.curl('GET','/workflowInstances/v1/workflow/'+workflowKey));const workflowIncidents=(cov_18ft6k127v.s[12]++,await this.curl('GET','/incidents/v1/workflow/'+workflowKey));cov_18ft6k127v.s[13]++;return{workflow:{workflowKey:workflow.sourceAsMap.value.deployedWorkflows[0].workflowKey,bpmnProcessId:workflow.sourceAsMap.value.deployedWorkflows[0].bpmnProcessId,version:workflow.sourceAsMap.value.deployedWorkflows[0].version,resource:workflow.sourceAsMap.value.resources[0].resource},instances:_.map(workflowInstances,workflowInstance=>{cov_18ft6k127v.f[3]++;cov_18ft6k127v.s[14]++;return{elementId:workflowInstance.sourceAsMap.value.elementId,workflowInstanceKey:workflowInstance.sourceAsMap.value.workflowInstanceKey,version:workflowInstance.sourceAsMap.value.version};}),incidents:_.map(workflowIncidents,workflowIncident=>{cov_18ft6k127v.f[4]++;cov_18ft6k127v.s[15]++;return{elementId:workflowIncident.sourceAsMap.value.elementId,elementInstanceKey:workflowIncident.sourceAsMap.value.elementInstanceKey,errorType:workflowIncident.sourceAsMap.value.errorType,errorMessage:workflowIncident.sourceAsMap.value.errorMessage,workflowKey:workflowIncident.sourceAsMap.value.workflowKey,workflowInstanceKey:workflowIncident.sourceAsMap.value.workflowInstanceKey,bpmnProcessId:workflowIncident.sourceAsMap.value.bpmnProcessId};})};})));const meta=(cov_18ft6k127v.s[16]++,{total:response.total,page:query.page,per_page:query.pageSize});cov_18ft6k127v.s[17]++;ctx.body={meta,data:result};}/**
   * @Summary Get a bpmn by key
   * @Router GET /workflows/definitions/{id}
   * @Request path string *id
   * @Request query string pageSize
   * @Request query string page
   * @Response 200
   * @Response 404
   * @Response 500 error Unknown internal server error
   */async show(){cov_18ft6k127v.f[5]++;const{ctx}=(cov_18ft6k127v.s[18]++,this);const{id}=(cov_18ft6k127v.s[19]++,ctx.params);const workflows=(cov_18ft6k127v.s[20]++,await this.curl('GET',`/workflows/v1/${id}`));const data=(cov_18ft6k127v.s[21]++,_.uniqBy(workflows,function(e){cov_18ft6k127v.f[6]++;cov_18ft6k127v.s[22]++;return e.sourceAsMap.value.deployedWorkflows[0].workflowKey;}));const result=(cov_18ft6k127v.s[23]++,await Promise.all(_.map(data,async workflow=>{cov_18ft6k127v.f[7]++;const workflowKey=(cov_18ft6k127v.s[24]++,workflow.sourceAsMap.value.deployedWorkflows[0].workflowKey);const workflowInstances=(cov_18ft6k127v.s[25]++,await this.curl('GET','/workflowInstances/v1/workflow/'+workflowKey));const workflowIncidents=(cov_18ft6k127v.s[26]++,await this.curl('GET','/incidents/v1/workflow/'+workflowKey));cov_18ft6k127v.s[27]++;return{workflow:{workflowKey:workflow.sourceAsMap.value.deployedWorkflows[0].workflowKey,bpmnProcessId:workflow.sourceAsMap.value.deployedWorkflows[0].bpmnProcessId,version:workflow.sourceAsMap.value.deployedWorkflows[0].version,resource:workflow.sourceAsMap.value.resources[0].resource},instances:_.map(workflowInstances,workflowInstance=>{cov_18ft6k127v.f[8]++;cov_18ft6k127v.s[28]++;return{elementId:workflowInstance.sourceAsMap.value.elementId,workflowInstanceKey:workflowInstance.sourceAsMap.value.workflowInstanceKey,version:workflowInstance.sourceAsMap.value.version};}),incidents:_.map(workflowIncidents,workflowIncident=>{cov_18ft6k127v.f[9]++;cov_18ft6k127v.s[29]++;return{elementId:workflowIncident.sourceAsMap.value.elementId,elementInstanceKey:workflowIncident.sourceAsMap.value.elementInstanceKey,errorType:workflowIncident.sourceAsMap.value.errorType,errorMessage:workflowIncident.sourceAsMap.value.errorMessage,workflowKey:workflowIncident.sourceAsMap.value.workflowKey,workflowInstanceKey:workflowIncident.sourceAsMap.value.workflowInstanceKey,bpmnProcessId:workflowIncident.sourceAsMap.value.bpmnProcessId};})};})));cov_18ft6k127v.s[30]++;ctx.body={data:result};}/**
   * @Summary Deployment a bpmn
   * @Router POST /workflows/definitions
   * @Request body string *body
   * @Response 200
   */async create(){cov_18ft6k127v.f[10]++;const{ctx}=(cov_18ft6k127v.s[31]++,this);const fs=(cov_18ft6k127v.s[32]++,require('fs'));// ctx.validate(ctx.rule.createUserPayload, ctx.request.body);
const file=(cov_18ft6k127v.s[33]++,ctx.request.files[0]);cov_18ft6k127v.s[34]++;ctx.logger.info('%j',file);const contents=(cov_18ft6k127v.s[35]++,fs.readFileSync(file.filepath,'utf8'));cov_18ft6k127v.s[36]++;try{cov_18ft6k127v.s[37]++;ctx.body={data:await this.curl('POST','/workflows/v1/resources/xml',contents)};}finally{cov_18ft6k127v.s[38]++;// remove tmp files and don't block the request's response
// cleanupRequestFiles won't throw error even remove file io error happen
ctx.cleanupRequestFiles([file]);}}}cov_18ft6k127v.s[39]++;module.exports=WorkflowDeploymentController;