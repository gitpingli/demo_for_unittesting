'use strict';var cov_2qghtahbd3=function(){var path="/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/service/consoleconnect/port.js";var hash="84b9f04f52b8a86e94f45503322714b668c8047e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/pingli/workspace/repository/pccw/demo/sherpa-api/console-core-service-sherpa/app/service/consoleconnect/port.js",statementMap:{"0":{start:{line:3,column:18},end:{line:3,column:33}},"1":{start:{line:4,column:10},end:{line:4,column:27}},"2":{start:{line:8,column:20},end:{line:8,column:24}},"3":{start:{line:9,column:4},end:{line:9,column:74}},"4":{start:{line:10,column:18},end:{line:10,column:45}},"5":{start:{line:11,column:17},end:{line:15,column:6}},"6":{start:{line:16,column:17},end:{line:20,column:6}},"7":{start:{line:21,column:4},end:{line:21,column:28}},"8":{start:{line:25,column:20},end:{line:25,column:24}},"9":{start:{line:26,column:4},end:{line:26,column:59}},"10":{start:{line:27,column:18},end:{line:27,column:45}},"11":{start:{line:28,column:17},end:{line:32,column:6}},"12":{start:{line:33,column:17},end:{line:37,column:6}},"13":{start:{line:39,column:4},end:{line:39,column:49}},"14":{start:{line:39,column:31},end:{line:39,column:48}},"15":{start:{line:43,column:18},end:{line:43,column:45}},"16":{start:{line:44,column:17},end:{line:48,column:6}},"17":{start:{line:49,column:4},end:{line:53,column:6}},"18":{start:{line:57,column:4},end:{line:57,column:15}},"19":{start:{line:61,column:0},end:{line:61,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:2},end:{line:7,column:3}},loc:{start:{line:7,column:32},end:{line:22,column:3}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:24,column:2},end:{line:24,column:3}},loc:{start:{line:24,column:27},end:{line:40,column:3}},line:24},"2":{name:"(anonymous_2)",decl:{start:{line:39,column:23},end:{line:39,column:24}},loc:{start:{line:39,column:31},end:{line:39,column:48}},line:39},"3":{name:"(anonymous_3)",decl:{start:{line:42,column:2},end:{line:42,column:3}},loc:{start:{line:42,column:75},end:{line:54,column:3}},line:42},"4":{name:"(anonymous_4)",decl:{start:{line:56,column:2},end:{line:56,column:3}},loc:{start:{line:56,column:16},end:{line:58,column:3}},line:56}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"84b9f04f52b8a86e94f45503322714b668c8047e"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const CcService=(cov_2qghtahbd3.s[0]++,require('./cc'));const _=(cov_2qghtahbd3.s[1]++,require('lodash'));class PortService extends CcService{async findOne(companyId,id){cov_2qghtahbd3.f[0]++;const{ctx}=(cov_2qghtahbd3.s[2]++,this);cov_2qghtahbd3.s[3]++;ctx.logger.info('find a port, companyId=%s, portId=%s',companyId,id);const token=(cov_2qghtahbd3.s[4]++,await this.login(companyId));const user=(cov_2qghtahbd3.s[5]++,await this.curl({method:'GET',endpoint:'/api/auth/token',token}));const data=(cov_2qghtahbd3.s[6]++,await this.curl({method:'GET',endpoint:`/api/company/${user.companies[0].username}/ports/${id}`,token}));cov_2qghtahbd3.s[7]++;return this.render(data);}async search(companyId){cov_2qghtahbd3.f[1]++;const{ctx}=(cov_2qghtahbd3.s[8]++,this);cov_2qghtahbd3.s[9]++;ctx.logger.info('search ports,companyId=%s',companyId);const token=(cov_2qghtahbd3.s[10]++,await this.login(companyId));const user=(cov_2qghtahbd3.s[11]++,await this.curl({method:'GET',endpoint:'/api/auth/token',token}));const data=(cov_2qghtahbd3.s[12]++,await this.curl({method:'GET',endpoint:`/app-user/${user.companies[0].id}/ports?filter=%7B%22where%22%3A%7B%22status%22%3A%7B%22in%22%3A%5B%22ACTIVE%22%5D%7D%7D%7D`,token}));cov_2qghtahbd3.s[13]++;return _.map(data,item=>{cov_2qghtahbd3.f[2]++;cov_2qghtahbd3.s[14]++;return this.render(item);});}async getUtilization(companyId,portId,startTime,endTime,resolution){cov_2qghtahbd3.f[3]++;const token=(cov_2qghtahbd3.s[15]++,await this.login(companyId));const user=(cov_2qghtahbd3.s[16]++,await this.curl({method:'GET',endpoint:'/api/auth/token',token}));cov_2qghtahbd3.s[17]++;return await this.curl({method:'GET',endpoint:`/api/company/${user.companies[0].username}/ports/${portId}/utilization?end=${endTime}&start=${startTime}&resolution=${resolution}`,token});}render(data){cov_2qghtahbd3.f[4]++;cov_2qghtahbd3.s[18]++;return data;}}cov_2qghtahbd3.s[19]++;module.exports=PortService;