'use strict';var cov_lvy2qsnq8=function(){var path="/home/htchen/console-core-service-sherpa/app/service/gateway/key.js";var hash="bfbbd17dc752f994bc55cc4ebe7652f068f53a24";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/htchen/console-core-service-sherpa/app/service/gateway/key.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:35}},"1":{start:{line:8,column:20},end:{line:8,column:24}},"2":{start:{line:9,column:18},end:{line:13,column:5}},"3":{start:{line:11,column:8},end:{line:11,column:62}},"4":{start:{line:14,column:4},end:{line:19,column:5}},"5":{start:{line:14,column:27},end:{line:14,column:65}},"6":{start:{line:15,column:6},end:{line:18,column:7}},"7":{start:{line:20,column:4},end:{line:20,column:16}},"8":{start:{line:25,column:20},end:{line:25,column:24}},"9":{start:{line:26,column:4},end:{line:26,column:50}},"10":{start:{line:29,column:4},end:{line:31,column:5}},"11":{start:{line:29,column:53},end:{line:29,column:69}},"12":{start:{line:30,column:6},end:{line:30,column:71}},"13":{start:{line:33,column:19},end:{line:33,column:21}},"14":{start:{line:34,column:19},end:{line:34,column:21}},"15":{start:{line:35,column:26},end:{line:35,column:28}},"16":{start:{line:36,column:25},end:{line:36,column:27}},"17":{start:{line:37,column:4},end:{line:43,column:5}},"18":{start:{line:38,column:6},end:{line:40,column:7}},"19":{start:{line:42,column:6},end:{line:42,column:45}},"20":{start:{line:45,column:4},end:{line:50,column:5}},"21":{start:{line:46,column:6},end:{line:49,column:7}},"22":{start:{line:53,column:4},end:{line:73,column:5}},"23":{start:{line:54,column:6},end:{line:54,column:70}},"24":{start:{line:56,column:6},end:{line:65,column:7}},"25":{start:{line:58,column:10},end:{line:63,column:11}},"26":{start:{line:60,column:40},end:{line:60,column:53}},"27":{start:{line:67,column:6},end:{line:67,column:46}},"28":{start:{line:69,column:6},end:{line:69,column:39}},"29":{start:{line:70,column:6},end:{line:70,column:53}},"30":{start:{line:70,column:42},end:{line:70,column:52}},"31":{start:{line:72,column:6},end:{line:72,column:72}},"32":{start:{line:75,column:4},end:{line:82,column:5}},"33":{start:{line:77,column:9},end:{line:81,column:9}},"34":{start:{line:84,column:22},end:{line:94,column:5}},"35":{start:{line:95,column:4},end:{line:95,column:67}},"36":{start:{line:98,column:4},end:{line:114,column:5}},"37":{start:{line:99,column:19},end:{line:103,column:8}},"38":{start:{line:104,column:6},end:{line:104,column:58}},"39":{start:{line:106,column:6},end:{line:110,column:7}},"40":{start:{line:112,column:6},end:{line:112,column:57}},"41":{start:{line:113,column:6},end:{line:113,column:61}},"42":{start:{line:116,column:4},end:{line:123,column:5}},"43":{start:{line:117,column:21},end:{line:117,column:56}},"44":{start:{line:118,column:6},end:{line:118,column:40}},"45":{start:{line:119,column:6},end:{line:119,column:40}},"46":{start:{line:120,column:6},end:{line:120,column:19}},"47":{start:{line:122,column:6},end:{line:122,column:61}},"48":{start:{line:128,column:19},end:{line:128,column:21}},"49":{start:{line:129,column:4},end:{line:131,column:5}},"50":{start:{line:130,column:6},end:{line:130,column:36}},"51":{start:{line:132,column:4},end:{line:132,column:62}},"52":{start:{line:136,column:16},end:{line:151,column:6}},"53":{start:{line:152,column:4},end:{line:154,column:5}},"54":{start:{line:153,column:6},end:{line:153,column:51}},"55":{start:{line:155,column:4},end:{line:155,column:14}},"56":{start:{line:159,column:20},end:{line:159,column:24}},"57":{start:{line:161,column:4},end:{line:161,column:53}},"58":{start:{line:162,column:23},end:{line:162,column:74}},"59":{start:{line:163,column:4},end:{line:163,column:79}},"60":{start:{line:163,column:28},end:{line:163,column:79}},"61":{start:{line:166,column:4},end:{line:170,column:5}},"62":{start:{line:167,column:6},end:{line:167,column:74}},"63":{start:{line:169,column:6},end:{line:169,column:45}},"64":{start:{line:171,column:19},end:{line:171,column:21}},"65":{start:{line:172,column:19},end:{line:172,column:21}},"66":{start:{line:173,column:26},end:{line:173,column:28}},"67":{start:{line:174,column:25},end:{line:174,column:27}},"68":{start:{line:176,column:4},end:{line:180,column:5}},"69":{start:{line:177,column:57},end:{line:177,column:73}},"70":{start:{line:179,column:6},end:{line:179,column:71}},"71":{start:{line:185,column:4},end:{line:205,column:5}},"72":{start:{line:186,column:6},end:{line:186,column:73}},"73":{start:{line:188,column:6},end:{line:197,column:7}},"74":{start:{line:190,column:10},end:{line:195,column:11}},"75":{start:{line:192,column:40},end:{line:192,column:53}},"76":{start:{line:199,column:6},end:{line:199,column:46}},"77":{start:{line:201,column:6},end:{line:201,column:39}},"78":{start:{line:202,column:6},end:{line:202,column:53}},"79":{start:{line:202,column:42},end:{line:202,column:52}},"80":{start:{line:204,column:6},end:{line:204,column:75}},"81":{start:{line:207,column:4},end:{line:214,column:5}},"82":{start:{line:209,column:9},end:{line:213,column:9}},"83":{start:{line:217,column:4},end:{line:246,column:5}},"84":{start:{line:219,column:26},end:{line:230,column:9}},"85":{start:{line:232,column:8},end:{line:232,column:71}},"86":{start:{line:234,column:8},end:{line:244,column:9}},"87":{start:{line:235,column:23},end:{line:239,column:12}},"88":{start:{line:240,column:10},end:{line:240,column:62}},"89":{start:{line:242,column:10},end:{line:242,column:61}},"90":{start:{line:243,column:10},end:{line:243,column:73}},"91":{start:{line:248,column:20},end:{line:250,column:5}},"92":{start:{line:252,column:4},end:{line:258,column:5}},"93":{start:{line:253,column:6},end:{line:253,column:38}},"94":{start:{line:254,column:6},end:{line:254,column:44}},"95":{start:{line:255,column:6},end:{line:255,column:44}},"96":{start:{line:257,column:6},end:{line:257,column:61}},"97":{start:{line:261,column:4},end:{line:261,column:34}},"98":{start:{line:265,column:16},end:{line:265,column:67}},"99":{start:{line:266,column:4},end:{line:268,column:5}},"100":{start:{line:267,column:6},end:{line:267,column:51}},"101":{start:{line:270,column:4},end:{line:270,column:72}},"102":{start:{line:270,column:21},end:{line:270,column:72}},"103":{start:{line:273,column:21},end:{line:273,column:44}},"104":{start:{line:275,column:4},end:{line:291,column:5}},"105":{start:{line:276,column:6},end:{line:284,column:7}},"106":{start:{line:277,column:8},end:{line:280,column:10}},"107":{start:{line:282,column:8},end:{line:282,column:64}},"108":{start:{line:283,column:8},end:{line:283,column:63}},"109":{start:{line:288,column:6},end:{line:288,column:48}},"110":{start:{line:290,column:6},end:{line:290,column:61}},"111":{start:{line:295,column:0},end:{line:295,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:2},end:{line:7,column:3}},loc:{start:{line:7,column:42},end:{line:21,column:3}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:19},end:{line:10,column:20}},loc:{start:{line:10,column:31},end:{line:12,column:7}},line:10},"2":{name:"(anonymous_2)",decl:{start:{line:14,column:19},end:{line:14,column:20}},loc:{start:{line:14,column:27},end:{line:14,column:65}},line:14},"3":{name:"(anonymous_3)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:21},end:{line:124,column:3}},line:23},"4":{name:"(anonymous_4)",decl:{start:{line:29,column:46},end:{line:29,column:47}},loc:{start:{line:29,column:53},end:{line:29,column:69}},line:29},"5":{name:"(anonymous_5)",decl:{start:{line:57,column:21},end:{line:57,column:22}},loc:{start:{line:57,column:32},end:{line:64,column:9}},line:57},"6":{name:"(anonymous_6)",decl:{start:{line:60,column:33},end:{line:60,column:34}},loc:{start:{line:60,column:40},end:{line:60,column:53}},line:60},"7":{name:"(anonymous_7)",decl:{start:{line:70,column:37},end:{line:70,column:38}},loc:{start:{line:70,column:42},end:{line:70,column:52}},line:70},"8":{name:"(anonymous_8)",decl:{start:{line:76,column:6},end:{line:76,column:7}},loc:{start:{line:77,column:9},end:{line:81,column:9}},line:77},"9":{name:"(anonymous_9)",decl:{start:{line:126,column:2},end:{line:126,column:3}},loc:{start:{line:126,column:21},end:{line:133,column:3}},line:126},"10":{name:"(anonymous_10)",decl:{start:{line:135,column:2},end:{line:135,column:3}},loc:{start:{line:135,column:22},end:{line:156,column:3}},line:135},"11":{name:"(anonymous_11)",decl:{start:{line:158,column:2},end:{line:158,column:3}},loc:{start:{line:158,column:28},end:{line:262,column:3}},line:158},"12":{name:"(anonymous_12)",decl:{start:{line:177,column:50},end:{line:177,column:51}},loc:{start:{line:177,column:57},end:{line:177,column:73}},line:177},"13":{name:"(anonymous_13)",decl:{start:{line:189,column:21},end:{line:189,column:22}},loc:{start:{line:189,column:32},end:{line:196,column:9}},line:189},"14":{name:"(anonymous_14)",decl:{start:{line:192,column:33},end:{line:192,column:34}},loc:{start:{line:192,column:40},end:{line:192,column:53}},line:192},"15":{name:"(anonymous_15)",decl:{start:{line:202,column:37},end:{line:202,column:38}},loc:{start:{line:202,column:42},end:{line:202,column:52}},line:202},"16":{name:"(anonymous_16)",decl:{start:{line:208,column:6},end:{line:208,column:7}},loc:{start:{line:209,column:9},end:{line:213,column:9}},line:209},"17":{name:"(anonymous_17)",decl:{start:{line:218,column:19},end:{line:218,column:20}},loc:{start:{line:218,column:33},end:{line:245,column:7}},line:218},"18":{name:"(anonymous_18)",decl:{start:{line:264,column:2},end:{line:264,column:3}},loc:{start:{line:264,column:21},end:{line:292,column:3}},line:264}},branchMap:{"0":{loc:{start:{line:14,column:4},end:{line:19,column:5}},type:"if",locations:[{start:{line:14,column:4},end:{line:19,column:5}},{start:{line:14,column:4},end:{line:19,column:5}}],line:14},"1":{loc:{start:{line:14,column:27},end:{line:14,column:65}},type:"binary-expr",locations:[{start:{line:14,column:27},end:{line:14,column:40}},{start:{line:14,column:44},end:{line:14,column:65}}],line:14},"2":{loc:{start:{line:29,column:4},end:{line:31,column:5}},type:"if",locations:[{start:{line:29,column:4},end:{line:31,column:5}},{start:{line:29,column:4},end:{line:31,column:5}}],line:29},"3":{loc:{start:{line:45,column:4},end:{line:50,column:5}},type:"if",locations:[{start:{line:45,column:4},end:{line:50,column:5}},{start:{line:45,column:4},end:{line:50,column:5}}],line:45},"4":{loc:{start:{line:53,column:4},end:{line:73,column:5}},type:"if",locations:[{start:{line:53,column:4},end:{line:73,column:5}},{start:{line:53,column:4},end:{line:73,column:5}}],line:53},"5":{loc:{start:{line:53,column:8},end:{line:53,column:66}},type:"binary-expr",locations:[{start:{line:53,column:8},end:{line:53,column:36}},{start:{line:53,column:40},end:{line:53,column:66}}],line:53},"6":{loc:{start:{line:129,column:4},end:{line:131,column:5}},type:"if",locations:[{start:{line:129,column:4},end:{line:131,column:5}},{start:{line:129,column:4},end:{line:131,column:5}}],line:129},"7":{loc:{start:{line:152,column:4},end:{line:154,column:5}},type:"if",locations:[{start:{line:152,column:4},end:{line:154,column:5}},{start:{line:152,column:4},end:{line:154,column:5}}],line:152},"8":{loc:{start:{line:163,column:4},end:{line:163,column:79}},type:"if",locations:[{start:{line:163,column:4},end:{line:163,column:79}},{start:{line:163,column:4},end:{line:163,column:79}}],line:163},"9":{loc:{start:{line:176,column:4},end:{line:180,column:5}},type:"if",locations:[{start:{line:176,column:4},end:{line:180,column:5}},{start:{line:176,column:4},end:{line:180,column:5}}],line:176},"10":{loc:{start:{line:185,column:4},end:{line:205,column:5}},type:"if",locations:[{start:{line:185,column:4},end:{line:205,column:5}},{start:{line:185,column:4},end:{line:205,column:5}}],line:185},"11":{loc:{start:{line:185,column:8},end:{line:185,column:72}},type:"binary-expr",locations:[{start:{line:185,column:8},end:{line:185,column:39}},{start:{line:185,column:43},end:{line:185,column:72}}],line:185},"12":{loc:{start:{line:266,column:4},end:{line:268,column:5}},type:"if",locations:[{start:{line:266,column:4},end:{line:268,column:5}},{start:{line:266,column:4},end:{line:268,column:5}}],line:266},"13":{loc:{start:{line:270,column:4},end:{line:270,column:72}},type:"if",locations:[{start:{line:270,column:4},end:{line:270,column:72}},{start:{line:270,column:4},end:{line:270,column:72}}],line:270}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"bfbbd17dc752f994bc55cc4ebe7652f068f53a24"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const TykService=(cov_lvy2qsnq8.s[0]++,require('./tyk'));// https://tyk.io/docs/tyk-dashboard-api/api-keys/
class KeyService extends TykService{async fetchListResouces(resouces,key){cov_lvy2qsnq8.f[0]++;const{ctx}=(cov_lvy2qsnq8.s[1]++,this);const lists=(cov_lvy2qsnq8.s[2]++,await Promise.all(resouces.map(async id=>{cov_lvy2qsnq8.f[1]++;cov_lvy2qsnq8.s[3]++;return await ctx.model[key].findOne({where:{id}});})));cov_lvy2qsnq8.s[4]++;if(lists.some(item=>{cov_lvy2qsnq8.f[2]++;cov_lvy2qsnq8.s[5]++;return(cov_lvy2qsnq8.b[1][0]++,item===null)||(cov_lvy2qsnq8.b[1][1]++,item.deleted===true);})){cov_lvy2qsnq8.b[0][0]++;cov_lvy2qsnq8.s[6]++;this.ctx.throw(400,`one of ${key}s has been deleted or not exists, can not associate a key with it`);}else{cov_lvy2qsnq8.b[0][1]++;}cov_lvy2qsnq8.s[7]++;return lists;}async create(key){cov_lvy2qsnq8.f[3]++;// TODO: key can not be associate with deleted app and service
const{ctx}=(cov_lvy2qsnq8.s[8]++,this);cov_lvy2qsnq8.s[9]++;ctx.logger.info('key create payload: %j',key);// serviceIds and policyIds can not be empty at the same time.
cov_lvy2qsnq8.s[10]++;if([key.serviceIds,key.policyIds].every(val=>{cov_lvy2qsnq8.f[4]++;cov_lvy2qsnq8.s[11]++;return val.length===0;})){cov_lvy2qsnq8.b[2][0]++;cov_lvy2qsnq8.s[12]++;this.ctx.throw(400,'must specify one service or policy for key');}else{cov_lvy2qsnq8.b[2][1]++;}let application;let policies=(cov_lvy2qsnq8.s[13]++,[]);let services=(cov_lvy2qsnq8.s[14]++,[]);let appliedPolicies=(cov_lvy2qsnq8.s[15]++,[]);const accessRights=(cov_lvy2qsnq8.s[16]++,{});cov_lvy2qsnq8.s[17]++;try{cov_lvy2qsnq8.s[18]++;application=await ctx.service.gateway.application.findById(key.applicationId);}catch(error){cov_lvy2qsnq8.s[19]++;ctx.throw(400,'application not found');}cov_lvy2qsnq8.s[20]++;if(application.deleted){cov_lvy2qsnq8.b[3][0]++;cov_lvy2qsnq8.s[21]++;this.ctx.throw(400,'application has been deleted, can not associate a key with it');}else{cov_lvy2qsnq8.b[3][1]++;}// policy overides service.
cov_lvy2qsnq8.s[22]++;if((cov_lvy2qsnq8.b[5][0]++,Array.isArray(key.policyIds))&&(cov_lvy2qsnq8.b[5][1]++,key.policyIds.length!==0)){cov_lvy2qsnq8.b[4][0]++;cov_lvy2qsnq8.s[23]++;policies=await this.fetchListResouces(key.policyIds,'Policy');// get services from policies.accessRights
cov_lvy2qsnq8.s[24]++;await Promise.all(policies.map(async p=>{cov_lvy2qsnq8.f[5]++;cov_lvy2qsnq8.s[25]++;services.push((await this.fetchListResouces(p.accessRights.map(obj=>{cov_lvy2qsnq8.f[6]++;cov_lvy2qsnq8.s[26]++;return obj.serviceId;}),'Service')));}));// to 1D array
cov_lvy2qsnq8.s[27]++;services=[].concat.apply([],services);// remove duplicates
cov_lvy2qsnq8.s[28]++;services=[...new Set(services)];cov_lvy2qsnq8.s[29]++;appliedPolicies=policies.map(p=>{cov_lvy2qsnq8.f[7]++;cov_lvy2qsnq8.s[30]++;return p.policyId;});}else{cov_lvy2qsnq8.b[4][1]++;cov_lvy2qsnq8.s[31]++;services=await this.fetchListResouces(key.serviceIds,'Service');}// assamble accessRights based on the services
cov_lvy2qsnq8.s[32]++;services.forEach(item=>{cov_lvy2qsnq8.f[8]++;cov_lvy2qsnq8.s[33]++;return accessRights[item.apiId]={api_id:item.apiId,api_name:item.name,versions:['Default']};});const keyConfig=(cov_lvy2qsnq8.s[34]++,{last_check:0,// please check PLATPO-220, allowance should same with rate
allowance:1000,rate:1000,per:60,expires:0,quota_max:-1,apply_policies:appliedPolicies,access_rights:accessRights});cov_lvy2qsnq8.s[35]++;ctx.logger.info('tyk key config create payload: %j',keyConfig);let options;cov_lvy2qsnq8.s[36]++;try{const data=(cov_lvy2qsnq8.s[37]++,await this.curl({method:'POST',endpoint:'/keys',payload:keyConfig}));cov_lvy2qsnq8.s[38]++;ctx.logger.info('tyk key create responds: %j',data);cov_lvy2qsnq8.s[39]++;options={hash:data.key_hash,value:data.key_id,applicationId:key.applicationId};}catch(error){cov_lvy2qsnq8.s[40]++;ctx.logger.error('tyk key create error: %j',error);cov_lvy2qsnq8.s[41]++;this.ctx.throw(400,`key can not be created: ${error}`);}cov_lvy2qsnq8.s[42]++;try{const newKey=(cov_lvy2qsnq8.s[43]++,await ctx.model.Key.create(options));cov_lvy2qsnq8.s[44]++;await newKey.setPolicies(policies);cov_lvy2qsnq8.s[45]++;await newKey.setServices(services);cov_lvy2qsnq8.s[46]++;return newKey;}catch(error){cov_lvy2qsnq8.s[47]++;this.ctx.throw(400,`key can not be created: ${error}`);}}async list(query){cov_lvy2qsnq8.f[9]++;// trim undefined
const filter=(cov_lvy2qsnq8.s[48]++,{});cov_lvy2qsnq8.s[49]++;if(query.deleted!==undefined){cov_lvy2qsnq8.b[6][0]++;cov_lvy2qsnq8.s[50]++;filter.deleted=query.deleted;}else{cov_lvy2qsnq8.b[6][1]++;}cov_lvy2qsnq8.s[51]++;return await this.ctx.model.Key.findAll({where:filter});}async findById(id){cov_lvy2qsnq8.f[10]++;const key=(cov_lvy2qsnq8.s[52]++,await this.ctx.model.Key.findOne({where:{id},include:[{model:this.ctx.model.Service,// show active service
// where: { active: true },
// Hide unwanted `servicekeys` nested object from results
through:{attributes:[]}},{model:this.ctx.model.Policy,through:{attributes:[]}}]}));cov_lvy2qsnq8.s[53]++;if(!key){cov_lvy2qsnq8.b[7][0]++;cov_lvy2qsnq8.s[54]++;this.ctx.throw(400,`key not found by ${id}`);}else{cov_lvy2qsnq8.b[7][1]++;}cov_lvy2qsnq8.s[55]++;return key;}async update(values,id){cov_lvy2qsnq8.f[11]++;const{ctx}=(cov_lvy2qsnq8.s[56]++,this);cov_lvy2qsnq8.s[57]++;ctx.logger.info('key update payload: %j',values);const exstingKey=(cov_lvy2qsnq8.s[58]++,await this.ctx.model.Key.findOne({where:{id}}));cov_lvy2qsnq8.s[59]++;if(exstingKey.deleted){cov_lvy2qsnq8.b[8][0]++;cov_lvy2qsnq8.s[60]++;this.ctx.throw(400,'Key has been deleted already');}else{cov_lvy2qsnq8.b[8][1]++;}// both applicationId and serviceIds can NOT be empty
// get application based on payload
cov_lvy2qsnq8.s[61]++;try{cov_lvy2qsnq8.s[62]++;await ctx.service.gateway.application.findById(values.applicationId);}catch(error){cov_lvy2qsnq8.s[63]++;ctx.throw(400,'application not found');}let policies=(cov_lvy2qsnq8.s[64]++,[]);let services=(cov_lvy2qsnq8.s[65]++,[]);let appliedPolicies=(cov_lvy2qsnq8.s[66]++,[]);const accessRights=(cov_lvy2qsnq8.s[67]++,{});// serviceIds and policyIds can not be empty at the same time.
cov_lvy2qsnq8.s[68]++;if([values.serviceIds,values.policyIds].every(val=>{cov_lvy2qsnq8.f[12]++;cov_lvy2qsnq8.s[69]++;return val.length===0;})){cov_lvy2qsnq8.b[9][0]++;cov_lvy2qsnq8.s[70]++;this.ctx.throw(400,'must specify one service or policy for key');}else{cov_lvy2qsnq8.b[9][1]++;}// get services based on payload
// FIXME: service has to be active
// policy overides service, get services based on payload
cov_lvy2qsnq8.s[71]++;if((cov_lvy2qsnq8.b[11][0]++,Array.isArray(values.policyIds))&&(cov_lvy2qsnq8.b[11][1]++,values.policyIds.length!==0)){cov_lvy2qsnq8.b[10][0]++;cov_lvy2qsnq8.s[72]++;policies=await this.fetchListResouces(values.policyIds,'Policy');// get services from policies.accessRights
cov_lvy2qsnq8.s[73]++;await Promise.all(policies.map(async p=>{cov_lvy2qsnq8.f[13]++;cov_lvy2qsnq8.s[74]++;services.push((await this.fetchListResouces(p.accessRights.map(obj=>{cov_lvy2qsnq8.f[14]++;cov_lvy2qsnq8.s[75]++;return obj.serviceId;}),'Service')));}));// to 1D array
cov_lvy2qsnq8.s[76]++;services=[].concat.apply([],services);// remove duplicates
cov_lvy2qsnq8.s[77]++;services=[...new Set(services)];cov_lvy2qsnq8.s[78]++;appliedPolicies=policies.map(p=>{cov_lvy2qsnq8.f[15]++;cov_lvy2qsnq8.s[79]++;return p.policyId;});}else{cov_lvy2qsnq8.b[10][1]++;cov_lvy2qsnq8.s[80]++;services=await this.fetchListResouces(values.serviceIds,'Service');}cov_lvy2qsnq8.s[81]++;services.forEach(item=>{cov_lvy2qsnq8.f[16]++;cov_lvy2qsnq8.s[82]++;return accessRights[item.apiId]={api_id:item.apiId,api_name:item.name,versions:['Default']};});// iter through each service
cov_lvy2qsnq8.s[83]++;await Promise.all(services.map(async item=>{cov_lvy2qsnq8.f[17]++;const keyConfig=(cov_lvy2qsnq8.s[84]++,{last_check:0,// please check PLATPO-220, allowance should same with rate
allowance:1000,rate:1000,per:60,expires:0,quota_max:-1,apply_policies:appliedPolicies,access_rights:accessRights,org_id:this.config.gateway.orgId});cov_lvy2qsnq8.s[85]++;ctx.logger.info('tyk key config update payload: %j',keyConfig);cov_lvy2qsnq8.s[86]++;try{const data=(cov_lvy2qsnq8.s[87]++,await this.curl({method:'PUT',endpoint:`/apis/${item.apiId}/keys/${exstingKey.value}?suppress_reset=0`,payload:keyConfig}));cov_lvy2qsnq8.s[88]++;ctx.logger.info('tyk key update responds: %j',data);}catch(error){cov_lvy2qsnq8.s[89]++;ctx.logger.error('tyk key update error: %j',error);cov_lvy2qsnq8.s[90]++;ctx.throw(400,`key can not be updated: ${error.data.Message}`);}}));const options=(cov_lvy2qsnq8.s[91]++,{applicationId:values.applicationId});cov_lvy2qsnq8.s[92]++;try{cov_lvy2qsnq8.s[93]++;await exstingKey.update(options);cov_lvy2qsnq8.s[94]++;await exstingKey.setPolicies(policies);cov_lvy2qsnq8.s[95]++;await exstingKey.setServices(services);}catch(error){cov_lvy2qsnq8.s[96]++;this.ctx.throw(400,`key can not be updated: ${error}`);}// query again to get the updated key
cov_lvy2qsnq8.s[97]++;return await this.findById(id);}async destroy(id){cov_lvy2qsnq8.f[18]++;const key=(cov_lvy2qsnq8.s[98]++,await this.ctx.model.Key.findOne({where:{id}}));cov_lvy2qsnq8.s[99]++;if(!key){cov_lvy2qsnq8.b[12][0]++;cov_lvy2qsnq8.s[100]++;this.ctx.throw(400,`key not found by ${id}`);}else{cov_lvy2qsnq8.b[12][1]++;}cov_lvy2qsnq8.s[101]++;if(key.deleted){cov_lvy2qsnq8.b[13][0]++;cov_lvy2qsnq8.s[102]++;this.ctx.throw(400,'key has been deleted already');}else{cov_lvy2qsnq8.b[13][1]++;}// find the first service though key.
const services=(cov_lvy2qsnq8.s[103]++,await key.getServices());cov_lvy2qsnq8.s[104]++;try{cov_lvy2qsnq8.s[105]++;try{cov_lvy2qsnq8.s[106]++;await this.curl({method:'DELETE',endpoint:`/apis/${services[0].apiId}/keys/${key.value}`});}catch(error){cov_lvy2qsnq8.s[107]++;this.ctx.logger.error('tyk key delete error: %j',error);cov_lvy2qsnq8.s[108]++;this.ctx.throw(400,`key can not be deleted: ${error}`);}// when delete key, not unlink all the policies and services
// use same method as service does
cov_lvy2qsnq8.s[109]++;return await key.update({deleted:true});}catch(error){cov_lvy2qsnq8.s[110]++;this.ctx.throw(400,`key can not be deleted: ${error}`);}}}cov_lvy2qsnq8.s[111]++;module.exports=KeyService;