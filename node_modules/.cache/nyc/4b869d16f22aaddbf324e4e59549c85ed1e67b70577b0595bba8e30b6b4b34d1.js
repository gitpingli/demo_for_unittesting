'use strict';var cov_1pnofnewzv=function(){var path="/home/htchen/console-core-service-sherpa/app/service/gateway/policy.js";var hash="8d9e76cae0c765828f7c80b736531d09608a1c37";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/htchen/console-core-service-sherpa/app/service/gateway/policy.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:35}},"1":{start:{line:4,column:18},end:{line:4,column:38}},"2":{start:{line:5,column:11},end:{line:5,column:23}},"3":{start:{line:10,column:20},end:{line:10,column:24}},"4":{start:{line:11,column:24},end:{line:11,column:76}},"5":{start:{line:12,column:4},end:{line:18,column:6}},"6":{start:{line:13,column:6},end:{line:17,column:8}},"7":{start:{line:14,column:8},end:{line:16,column:9}},"8":{start:{line:14,column:35},end:{line:14,column:58}},"9":{start:{line:15,column:10},end:{line:15,column:65}},"10":{start:{line:22,column:24},end:{line:24,column:6}},"11":{start:{line:23,column:6},end:{line:23,column:42}},"12":{start:{line:25,column:4},end:{line:25,column:34}},"13":{start:{line:29,column:20},end:{line:29,column:24}},"14":{start:{line:30,column:4},end:{line:30,column:63}},"15":{start:{line:31,column:21},end:{line:31,column:70}},"16":{start:{line:32,column:20},end:{line:32,column:62}},"17":{start:{line:34,column:4},end:{line:36,column:5}},"18":{start:{line:35,column:6},end:{line:35,column:71}},"19":{start:{line:37,column:4},end:{line:37,column:50}},"20":{start:{line:38,column:21},end:{line:48,column:5}},"21":{start:{line:40,column:8},end:{line:46,column:9}},"22":{start:{line:41,column:10},end:{line:43,column:12}},"23":{start:{line:45,column:10},end:{line:45,column:45}},"24":{start:{line:50,column:4},end:{line:55,column:5}},"25":{start:{line:50,column:27},end:{line:50,column:45}},"26":{start:{line:51,column:6},end:{line:54,column:7}},"27":{start:{line:57,column:25},end:{line:57,column:27}},"28":{start:{line:58,column:4},end:{line:65,column:6}},"29":{start:{line:59,column:6},end:{line:64,column:7}},"30":{start:{line:67,column:4},end:{line:67,column:79}},"31":{start:{line:69,column:25},end:{line:80,column:5}},"32":{start:{line:81,column:4},end:{line:81,column:79}},"33":{start:{line:83,column:4},end:{line:95,column:5}},"34":{start:{line:84,column:19},end:{line:88,column:8}},"35":{start:{line:89,column:6},end:{line:89,column:61}},"36":{start:{line:91,column:6},end:{line:91,column:37}},"37":{start:{line:93,column:6},end:{line:93,column:60}},"38":{start:{line:94,column:6},end:{line:94,column:64}},"39":{start:{line:97,column:4},end:{line:101,column:5}},"40":{start:{line:98,column:6},end:{line:98,column:51}},"41":{start:{line:100,column:6},end:{line:100,column:64}},"42":{start:{line:106,column:19},end:{line:106,column:21}},"43":{start:{line:107,column:4},end:{line:109,column:5}},"44":{start:{line:108,column:6},end:{line:108,column:36}},"45":{start:{line:110,column:4},end:{line:112,column:5}},"46":{start:{line:111,column:6},end:{line:111,column:52}},"47":{start:{line:113,column:14},end:{line:122,column:6}},"48":{start:{line:124,column:4},end:{line:138,column:5}},"49":{start:{line:126,column:19},end:{line:126,column:29}},"50":{start:{line:127,column:8},end:{line:135,column:9}},"51":{start:{line:129,column:12},end:{line:131,column:14}},"52":{start:{line:132,column:12},end:{line:132,column:31}},"53":{start:{line:133,column:12},end:{line:133,column:21}},"54":{start:{line:136,column:8},end:{line:136,column:17}},"55":{start:{line:139,column:4},end:{line:139,column:14}},"56":{start:{line:143,column:19},end:{line:152,column:6}},"57":{start:{line:153,column:4},end:{line:155,column:5}},"58":{start:{line:154,column:6},end:{line:154,column:54}},"59":{start:{line:156,column:16},end:{line:156,column:31}},"60":{start:{line:157,column:4},end:{line:165,column:5}},"61":{start:{line:159,column:8},end:{line:161,column:10}},"62":{start:{line:162,column:8},end:{line:162,column:27}},"63":{start:{line:163,column:8},end:{line:163,column:17}},"64":{start:{line:166,column:4},end:{line:166,column:14}},"65":{start:{line:170,column:20},end:{line:170,column:24}},"66":{start:{line:172,column:4},end:{line:172,column:56}},"67":{start:{line:173,column:4},end:{line:173,column:49}},"68":{start:{line:174,column:26},end:{line:176,column:6}},"69":{start:{line:177,column:4},end:{line:179,column:5}},"70":{start:{line:178,column:6},end:{line:178,column:60}},"71":{start:{line:184,column:19},end:{line:184,column:21}},"72":{start:{line:185,column:25},end:{line:185,column:27}},"73":{start:{line:186,column:4},end:{line:209,column:5}},"74":{start:{line:187,column:6},end:{line:197,column:7}},"75":{start:{line:189,column:10},end:{line:195,column:11}},"76":{start:{line:190,column:12},end:{line:192,column:14}},"77":{start:{line:194,column:12},end:{line:194,column:47}},"78":{start:{line:199,column:6},end:{line:208,column:7}},"79":{start:{line:201,column:11},end:{line:207,column:11}},"80":{start:{line:211,column:4},end:{line:211,column:79}},"81":{start:{line:213,column:25},end:{line:229,column:5}},"82":{start:{line:230,column:4},end:{line:230,column:79}},"83":{start:{line:232,column:4},end:{line:242,column:5}},"84":{start:{line:233,column:19},end:{line:237,column:8}},"85":{start:{line:238,column:6},end:{line:238,column:61}},"86":{start:{line:240,column:6},end:{line:240,column:60}},"87":{start:{line:241,column:6},end:{line:241,column:72}},"88":{start:{line:244,column:4},end:{line:255,column:5}},"89":{start:{line:247,column:24},end:{line:247,column:53}},"90":{start:{line:248,column:6},end:{line:250,column:7}},"91":{start:{line:249,column:33},end:{line:249,column:62}},"92":{start:{line:252,column:6},end:{line:252,column:40}},"93":{start:{line:254,column:6},end:{line:254,column:64}},"94":{start:{line:258,column:4},end:{line:258,column:34}},"95":{start:{line:262,column:19},end:{line:262,column:73}},"96":{start:{line:263,column:4},end:{line:265,column:5}},"97":{start:{line:264,column:6},end:{line:264,column:54}},"98":{start:{line:267,column:4},end:{line:267,column:78}},"99":{start:{line:267,column:24},end:{line:267,column:78}},"100":{start:{line:270,column:17},end:{line:270,column:39}},"101":{start:{line:271,column:4},end:{line:276,column:5}},"102":{start:{line:271,column:23},end:{line:271,column:42}},"103":{start:{line:272,column:6},end:{line:275,column:7}},"104":{start:{line:278,column:4},end:{line:292,column:5}},"105":{start:{line:279,column:6},end:{line:287,column:7}},"106":{start:{line:280,column:8},end:{line:283,column:10}},"107":{start:{line:285,column:8},end:{line:285,column:67}},"108":{start:{line:286,column:8},end:{line:286,column:66}},"109":{start:{line:289,column:6},end:{line:289,column:51}},"110":{start:{line:291,column:6},end:{line:291,column:64}},"111":{start:{line:296,column:0},end:{line:296,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:2},end:{line:9,column:3}},loc:{start:{line:9,column:37},end:{line:19,column:3}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:25},end:{line:12,column:26}},loc:{start:{line:12,column:31},end:{line:18,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:13,column:29},end:{line:13,column:30}},loc:{start:{line:13,column:35},end:{line:17,column:7}},line:13},"3":{name:"(anonymous_3)",decl:{start:{line:14,column:30},end:{line:14,column:31}},loc:{start:{line:14,column:35},end:{line:14,column:58}},line:14},"4":{name:"(anonymous_4)",decl:{start:{line:21,column:2},end:{line:21,column:3}},loc:{start:{line:21,column:37},end:{line:26,column:3}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:22,column:42},end:{line:22,column:43}},loc:{start:{line:22,column:47},end:{line:24,column:5}},line:22},"6":{name:"(anonymous_6)",decl:{start:{line:28,column:2},end:{line:28,column:3}},loc:{start:{line:28,column:31},end:{line:102,column:3}},line:28},"7":{name:"(anonymous_7)",decl:{start:{line:39,column:31},end:{line:39,column:32}},loc:{start:{line:39,column:45},end:{line:47,column:7}},line:39},"8":{name:"(anonymous_8)",decl:{start:{line:50,column:22},end:{line:50,column:23}},loc:{start:{line:50,column:27},end:{line:50,column:45}},line:50},"9":{name:"(anonymous_9)",decl:{start:{line:58,column:21},end:{line:58,column:22}},loc:{start:{line:58,column:29},end:{line:65,column:5}},line:58},"10":{name:"(anonymous_10)",decl:{start:{line:104,column:2},end:{line:104,column:3}},loc:{start:{line:104,column:21},end:{line:140,column:3}},line:104},"11":{name:"(anonymous_11)",decl:{start:{line:125,column:14},end:{line:125,column:15}},loc:{start:{line:125,column:25},end:{line:137,column:7}},line:125},"12":{name:"(anonymous_12)",decl:{start:{line:128,column:30},end:{line:128,column:31}},loc:{start:{line:128,column:42},end:{line:134,column:11}},line:128},"13":{name:"(anonymous_13)",decl:{start:{line:142,column:2},end:{line:142,column:3}},loc:{start:{line:142,column:22},end:{line:167,column:3}},line:142},"14":{name:"(anonymous_14)",decl:{start:{line:158,column:27},end:{line:158,column:28}},loc:{start:{line:158,column:39},end:{line:164,column:7}},line:158},"15":{name:"(anonymous_15)",decl:{start:{line:169,column:2},end:{line:169,column:3}},loc:{start:{line:169,column:28},end:{line:259,column:3}},line:169},"16":{name:"(anonymous_16)",decl:{start:{line:188,column:32},end:{line:188,column:33}},loc:{start:{line:188,column:46},end:{line:196,column:9}},line:188},"17":{name:"(anonymous_17)",decl:{start:{line:200,column:8},end:{line:200,column:9}},loc:{start:{line:201,column:11},end:{line:207,column:11}},line:201},"18":{name:"(anonymous_18)",decl:{start:{line:249,column:22},end:{line:249,column:23}},loc:{start:{line:249,column:33},end:{line:249,column:62}},line:249},"19":{name:"(anonymous_19)",decl:{start:{line:261,column:2},end:{line:261,column:3}},loc:{start:{line:261,column:21},end:{line:293,column:3}},line:261},"20":{name:"(anonymous_20)",decl:{start:{line:271,column:18},end:{line:271,column:19}},loc:{start:{line:271,column:23},end:{line:271,column:42}},line:271}},branchMap:{"0":{loc:{start:{line:14,column:8},end:{line:16,column:9}},type:"if",locations:[{start:{line:14,column:8},end:{line:16,column:9}},{start:{line:14,column:8},end:{line:16,column:9}}],line:14},"1":{loc:{start:{line:34,column:4},end:{line:36,column:5}},type:"if",locations:[{start:{line:34,column:4},end:{line:36,column:5}},{start:{line:34,column:4},end:{line:36,column:5}}],line:34},"2":{loc:{start:{line:50,column:4},end:{line:55,column:5}},type:"if",locations:[{start:{line:50,column:4},end:{line:55,column:5}},{start:{line:50,column:4},end:{line:55,column:5}}],line:50},"3":{loc:{start:{line:61,column:22},end:{line:61,column:79}},type:"binary-expr",locations:[{start:{line:61,column:22},end:{line:61,column:73}},{start:{line:61,column:77},end:{line:61,column:79}}],line:61},"4":{loc:{start:{line:107,column:4},end:{line:109,column:5}},type:"if",locations:[{start:{line:107,column:4},end:{line:109,column:5}},{start:{line:107,column:4},end:{line:109,column:5}}],line:107},"5":{loc:{start:{line:110,column:4},end:{line:112,column:5}},type:"if",locations:[{start:{line:110,column:4},end:{line:112,column:5}},{start:{line:110,column:4},end:{line:112,column:5}}],line:110},"6":{loc:{start:{line:153,column:4},end:{line:155,column:5}},type:"if",locations:[{start:{line:153,column:4},end:{line:155,column:5}},{start:{line:153,column:4},end:{line:155,column:5}}],line:153},"7":{loc:{start:{line:177,column:4},end:{line:179,column:5}},type:"if",locations:[{start:{line:177,column:4},end:{line:179,column:5}},{start:{line:177,column:4},end:{line:179,column:5}}],line:177},"8":{loc:{start:{line:186,column:4},end:{line:209,column:5}},type:"if",locations:[{start:{line:186,column:4},end:{line:209,column:5}},{start:{line:186,column:4},end:{line:209,column:5}}],line:186},"9":{loc:{start:{line:205,column:14},end:{line:205,column:70}},type:"binary-expr",locations:[{start:{line:205,column:14},end:{line:205,column:64}},{start:{line:205,column:68},end:{line:205,column:70}}],line:205},"10":{loc:{start:{line:223,column:19},end:{line:225,column:31}},type:"cond-expr",locations:[{start:{line:224,column:10},end:{line:224,column:24}},{start:{line:225,column:10},end:{line:225,column:31}}],line:223},"11":{loc:{start:{line:226,column:14},end:{line:228,column:30}},type:"cond-expr",locations:[{start:{line:227,column:10},end:{line:227,column:23}},{start:{line:228,column:10},end:{line:228,column:30}}],line:226},"12":{loc:{start:{line:263,column:4},end:{line:265,column:5}},type:"if",locations:[{start:{line:263,column:4},end:{line:265,column:5}},{start:{line:263,column:4},end:{line:265,column:5}}],line:263},"13":{loc:{start:{line:267,column:4},end:{line:267,column:78}},type:"if",locations:[{start:{line:267,column:4},end:{line:267,column:78}},{start:{line:267,column:4},end:{line:267,column:78}}],line:267},"14":{loc:{start:{line:271,column:4},end:{line:276,column:5}},type:"if",locations:[{start:{line:271,column:4},end:{line:276,column:5}},{start:{line:271,column:4},end:{line:276,column:5}}],line:271}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"8d9e76cae0c765828f7c80b736531d09608a1c37"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const TykService=(cov_1pnofnewzv.s[0]++,require('./tyk'));const Sequelize=(cov_1pnofnewzv.s[1]++,require('sequelize'));const Op=(cov_1pnofnewzv.s[2]++,Sequelize.Op);// https://tyk.io/docs/tyk-apis/tyk-dashboard-api/portal-policies/
class PolicyService extends TykService{validateHTTPMethods(accessRights){cov_1pnofnewzv.f[0]++;const{ctx}=(cov_1pnofnewzv.s[3]++,this);const HTTPMETHODS=(cov_1pnofnewzv.s[4]++,['GET','POST','PUT','PATCH','DELETE','OPTIONS']);cov_1pnofnewzv.s[5]++;accessRights.forEach(ar=>{cov_1pnofnewzv.f[1]++;cov_1pnofnewzv.s[6]++;ar.allowedUrls.forEach(au=>{cov_1pnofnewzv.f[2]++;cov_1pnofnewzv.s[7]++;if(!au.methods.every(m=>{cov_1pnofnewzv.f[3]++;cov_1pnofnewzv.s[8]++;return HTTPMETHODS.includes(m);})){cov_1pnofnewzv.b[0][0]++;cov_1pnofnewzv.s[9]++;ctx.throw(400,`HTTP methods should in ${HTTPMETHODS}`);}else{cov_1pnofnewzv.b[0][1]++;}});});}findAllowedUrls(id,accessRights){cov_1pnofnewzv.f[4]++;const accessRight=(cov_1pnofnewzv.s[10]++,accessRights.find(a=>{cov_1pnofnewzv.f[5]++;cov_1pnofnewzv.s[11]++;return a.serviceId===id.toString();}));cov_1pnofnewzv.s[12]++;return accessRight.allowedUrls;}async create(policyPayload){cov_1pnofnewzv.f[6]++;const{ctx}=(cov_1pnofnewzv.s[13]++,this);cov_1pnofnewzv.s[14]++;ctx.logger.info('policy create payload: %j',policyPayload);const defaults=(cov_1pnofnewzv.s[15]++,{whitelist:true,active:true,deleted:false});const options=(cov_1pnofnewzv.s[16]++,Object.assign({},defaults,policyPayload));cov_1pnofnewzv.s[17]++;if(options.accessRights.length===0){cov_1pnofnewzv.b[1][0]++;cov_1pnofnewzv.s[18]++;ctx.throw(400,'must specify at least one service in the policy');}else{cov_1pnofnewzv.b[1][1]++;}cov_1pnofnewzv.s[19]++;this.validateHTTPMethods(options.accessRights);const services=(cov_1pnofnewzv.s[20]++,await Promise.all(options.accessRights.map(async item=>{cov_1pnofnewzv.f[7]++;cov_1pnofnewzv.s[21]++;try{cov_1pnofnewzv.s[22]++;return await ctx.model.Service.findOne({where:{id:item.serviceId}});}catch(error){cov_1pnofnewzv.s[23]++;ctx.throw(400,'service not found');}})));cov_1pnofnewzv.s[24]++;if(services.some(s=>{cov_1pnofnewzv.f[8]++;cov_1pnofnewzv.s[25]++;return s.deleted===true;})){cov_1pnofnewzv.b[2][0]++;cov_1pnofnewzv.s[26]++;this.ctx.throw(400,'one of services has been deleted, can not associate a key with it');}else{cov_1pnofnewzv.b[2][1]++;}const accessRights=(cov_1pnofnewzv.s[27]++,{});cov_1pnofnewzv.s[28]++;services.forEach(item=>{cov_1pnofnewzv.f[9]++;cov_1pnofnewzv.s[29]++;accessRights[item.apiId]={api_id:item.apiId,allowed_urls:(cov_1pnofnewzv.b[3][0]++,this.findAllowedUrls(item.id,options.accessRights))||(cov_1pnofnewzv.b[3][1]++,[]),api_name:item.name,versions:['Default']};});cov_1pnofnewzv.s[30]++;ctx.logger.info('tyk policy accessRights create payload: %j',accessRights);const policyConfig=(cov_1pnofnewzv.s[31]++,{rate:1000,per:60,quota_max:-1,quota_remaining:0,quota_renewal_rate:60,org_id:this.config.gateway.orgId,access_rights:accessRights,name:options.name,is_inactive:!options.active,active:options.active});cov_1pnofnewzv.s[32]++;ctx.logger.info('tyk policy policyConfig create payload: %j',policyConfig);cov_1pnofnewzv.s[33]++;try{const data=(cov_1pnofnewzv.s[34]++,await this.curl({method:'POST',endpoint:'/portal/policies',payload:policyConfig}));cov_1pnofnewzv.s[35]++;ctx.logger.info('tyk policy create responds: %j',data);// policy id from tyk
cov_1pnofnewzv.s[36]++;options.policyId=data.Message;}catch(error){cov_1pnofnewzv.s[37]++;ctx.logger.error('tyk policy create error: %j',error);cov_1pnofnewzv.s[38]++;this.ctx.throw(400,`policy can not be created: ${error}`);}cov_1pnofnewzv.s[39]++;try{cov_1pnofnewzv.s[40]++;return await ctx.model.Policy.create(options);}catch(error){cov_1pnofnewzv.s[41]++;this.ctx.throw(400,`policy can not be created: ${error}`);}}async list(query){cov_1pnofnewzv.f[10]++;// trim undefined
const filter=(cov_1pnofnewzv.s[42]++,{});cov_1pnofnewzv.s[43]++;if(query.deleted!==undefined){cov_1pnofnewzv.b[4][0]++;cov_1pnofnewzv.s[44]++;filter.deleted=query.deleted;}else{cov_1pnofnewzv.b[4][1]++;}cov_1pnofnewzv.s[45]++;if(query.name!==undefined){cov_1pnofnewzv.b[5][0]++;cov_1pnofnewzv.s[46]++;filter.name={[Op.like]:`%${query.name}%`};}else{cov_1pnofnewzv.b[5][1]++;}let res=(cov_1pnofnewzv.s[47]++,await this.ctx.model.Policy.findAll({where:filter,include:[{model:this.ctx.model.Key,through:{attributes:[]},include:[{model:this.ctx.model.Application,as:'application'}]}]}));// replace serviceID to service obj in resp
cov_1pnofnewzv.s[48]++;res=await Promise.all(res.map(async p=>{cov_1pnofnewzv.f[11]++;const jp=(cov_1pnofnewzv.s[49]++,p.toJSON());cov_1pnofnewzv.s[50]++;await Promise.all(jp.accessRights.map(async ar=>{cov_1pnofnewzv.f[12]++;cov_1pnofnewzv.s[51]++;ar.service=await this.ctx.model.Service.findOne({where:{id:ar.serviceId}});cov_1pnofnewzv.s[52]++;delete ar.serviceId;cov_1pnofnewzv.s[53]++;return ar;}));cov_1pnofnewzv.s[54]++;return jp;}));cov_1pnofnewzv.s[55]++;return res;}async findById(id){cov_1pnofnewzv.f[13]++;const policy=(cov_1pnofnewzv.s[56]++,await this.ctx.model.Policy.findOne({where:{id},include:[{model:this.ctx.model.Key,through:{attributes:[]},include:[{model:this.ctx.model.Application,as:'application'}]}]}));cov_1pnofnewzv.s[57]++;if(!policy){cov_1pnofnewzv.b[6][0]++;cov_1pnofnewzv.s[58]++;this.ctx.throw(400,`policy not found by ${id}`);}else{cov_1pnofnewzv.b[6][1]++;}const res=(cov_1pnofnewzv.s[59]++,policy.toJSON());cov_1pnofnewzv.s[60]++;await Promise.all(res.accessRights.map(async ar=>{cov_1pnofnewzv.f[14]++;cov_1pnofnewzv.s[61]++;ar.service=await this.ctx.model.Service.findOne({where:{id:ar.serviceId}});cov_1pnofnewzv.s[62]++;delete ar.serviceId;cov_1pnofnewzv.s[63]++;return ar;}));cov_1pnofnewzv.s[64]++;return res;}async update(values,id){cov_1pnofnewzv.f[15]++;const{ctx}=(cov_1pnofnewzv.s[65]++,this);cov_1pnofnewzv.s[66]++;ctx.logger.info('policy update payload: %j',values);cov_1pnofnewzv.s[67]++;this.validateHTTPMethods(values.accessRights);const exstingPolicy=(cov_1pnofnewzv.s[68]++,await this.ctx.model.Policy.findOne({where:{id}}));cov_1pnofnewzv.s[69]++;if(exstingPolicy.deleted){cov_1pnofnewzv.b[7][0]++;cov_1pnofnewzv.s[70]++;this.ctx.throw(400,'Policy has been deleted already');}else{cov_1pnofnewzv.b[7][1]++;}// get services based on payload
// FIXME: service has to be active
// values.accessRights != {}
let services=(cov_1pnofnewzv.s[71]++,[]);const accessRights=(cov_1pnofnewzv.s[72]++,{});cov_1pnofnewzv.s[73]++;if(values.accessRights.length!==0){cov_1pnofnewzv.b[8][0]++;cov_1pnofnewzv.s[74]++;services=await Promise.all(values.accessRights.map(async item=>{cov_1pnofnewzv.f[16]++;cov_1pnofnewzv.s[75]++;try{cov_1pnofnewzv.s[76]++;return await ctx.model.Service.findOne({where:{id:item.serviceId}});}catch(error){cov_1pnofnewzv.s[77]++;ctx.throw(400,'service not found');}}));cov_1pnofnewzv.s[78]++;services.forEach(item=>{cov_1pnofnewzv.f[17]++;cov_1pnofnewzv.s[79]++;return accessRights[item.apiId]={api_id:item.apiId,api_name:item.name,allowed_urls:(cov_1pnofnewzv.b[9][0]++,this.findAllowedUrls(item.id,values.accessRights))||(cov_1pnofnewzv.b[9][1]++,[]),versions:['Default']};});}else{cov_1pnofnewzv.b[8][1]++;}cov_1pnofnewzv.s[80]++;ctx.logger.info('tyk policy accessRights update payload: %j',accessRights);const policyConfig=(cov_1pnofnewzv.s[81]++,{rate:1000,per:60,quota_max:-1,quota_remaining:0,quota_renewal_rate:60,_id:exstingPolicy.policyId,org_id:this.config.gateway.orgId,access_rights:accessRights,name:values.name,is_inactive:Object.prototype.hasOwnProperty.call(values,'active')?(cov_1pnofnewzv.b[10][0]++,!values.active):(cov_1pnofnewzv.b[10][1]++,!exstingPolicy.active),active:Object.prototype.hasOwnProperty.call(values,'active')?(cov_1pnofnewzv.b[11][0]++,values.active):(cov_1pnofnewzv.b[11][1]++,exstingPolicy.active)});cov_1pnofnewzv.s[82]++;ctx.logger.info('tyk policy policyConfig create payload: %j',policyConfig);cov_1pnofnewzv.s[83]++;try{const data=(cov_1pnofnewzv.s[84]++,await this.curl({method:'PUT',endpoint:`/portal/policies/${exstingPolicy.policyId}`,payload:policyConfig}));cov_1pnofnewzv.s[85]++;ctx.logger.info('tyk policy update responds: %j',data);}catch(error){cov_1pnofnewzv.s[86]++;ctx.logger.error('tyk policy update error: %j',error);cov_1pnofnewzv.s[87]++;ctx.throw(400,`policy can not be updated: ${error.data.Message}`);}cov_1pnofnewzv.s[88]++;try{// policy linked to a key, and updated the service related to the policy
// set key service according to policy
const keysWithP=(cov_1pnofnewzv.s[89]++,await exstingPolicy.getKeys());cov_1pnofnewzv.s[90]++;await Promise.all(keysWithP.map(async k=>{cov_1pnofnewzv.f[18]++;cov_1pnofnewzv.s[91]++;return await k.setServices(services);}));cov_1pnofnewzv.s[92]++;await exstingPolicy.update(values);}catch(error){cov_1pnofnewzv.s[93]++;this.ctx.throw(400,`policy can not be updated: ${error}`);}// query again to get the updated policy
cov_1pnofnewzv.s[94]++;return await this.findById(id);}async destroy(id){cov_1pnofnewzv.f[19]++;const policy=(cov_1pnofnewzv.s[95]++,await this.ctx.model.Policy.findOne({where:{id}}));cov_1pnofnewzv.s[96]++;if(!policy){cov_1pnofnewzv.b[12][0]++;cov_1pnofnewzv.s[97]++;this.ctx.throw(400,`policy not found by ${id}`);}else{cov_1pnofnewzv.b[12][1]++;}cov_1pnofnewzv.s[98]++;if(policy.deleted){cov_1pnofnewzv.b[13][0]++;cov_1pnofnewzv.s[99]++;this.ctx.throw(400,'policy has been deleted already');}else{cov_1pnofnewzv.b[13][1]++;}// check related keys, if not all deleted, can not delete policy.
const keys=(cov_1pnofnewzv.s[100]++,await policy.getKeys());cov_1pnofnewzv.s[101]++;if(keys.some(k=>{cov_1pnofnewzv.f[20]++;cov_1pnofnewzv.s[102]++;return k.deleted===false;})){cov_1pnofnewzv.b[14][0]++;cov_1pnofnewzv.s[103]++;this.ctx.throw(400,'keys are associate with this policy, can not delete the policy');}else{cov_1pnofnewzv.b[14][1]++;}cov_1pnofnewzv.s[104]++;try{cov_1pnofnewzv.s[105]++;try{cov_1pnofnewzv.s[106]++;await this.curl({method:'DELETE',endpoint:`/portal/policies/${policy.policyId}`});}catch(error){cov_1pnofnewzv.s[107]++;this.ctx.logger.error('tyk policy delete error: %j',error);cov_1pnofnewzv.s[108]++;this.ctx.throw(400,`policy can not be deleted: ${error}`);}cov_1pnofnewzv.s[109]++;return await policy.update({deleted:true});}catch(error){cov_1pnofnewzv.s[110]++;this.ctx.throw(400,`policy can not be deleted: ${error}`);}}}cov_1pnofnewzv.s[111]++;module.exports=PolicyService;