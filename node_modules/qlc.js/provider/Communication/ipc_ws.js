"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var index_js_1 = require("./index.js");
var IPC_WS = (function (_super) {
    __extends(IPC_WS, _super);
    function IPC_WS(_a) {
        var onEventTypes = _a.onEventTypes, sendFuncName = _a.sendFuncName;
        var _this = _super.call(this) || this;
        _this._onEventTypes = onEventTypes || [];
        _this._sendFuncName = sendFuncName;
        _this.connectStatus = false;
        _this.responseCbs = {};
        _this._connectEnd = null;
        _this._connectErr = null;
        _this._connectTimeout = null;
        _this._connectConnect = null;
        _this._connectClose = null;
        return _this;
    }
    IPC_WS.prototype._connected = function () {
        this.connectStatus = true;
        this._connectConnect && this._connectConnect();
    };
    IPC_WS.prototype._closed = function () {
        this.connectStatus = false;
        this._connectClose && this._connectClose();
    };
    IPC_WS.prototype._errored = function (err) {
        this._connectErr && this._connectErr(err);
    };
    IPC_WS.prototype._parse = function (data) {
        var _this = this;
        var results = [];
        data.forEach(function (ele) {
            if (!ele) {
                return;
            }
            try {
                var res = JSON.parse(ele);
                if (!(res instanceof Array) && res.result) {
                    try {
                        res.result = JSON.parse(res.result);
                    }
                    catch (e) {
                    }
                }
                results.push(res);
            }
            catch (error) {
            }
        });
        results.forEach(function (ele) {
            if (!(ele instanceof Array) && !ele.id) {
                return;
            }
            if (ele.id) {
                _this.responseCbs[ele.id] && _this.responseCbs[ele.id](ele);
                return;
            }
            for (var i = 0; i < ele.length; i++) {
                if (!ele[i].id) {
                    continue;
                }
                var id = ele[i].id;
                if (!_this.responseCbs[id]) {
                    continue;
                }
                _this.responseCbs[id](ele);
            }
        });
    };
    IPC_WS.prototype._checkOnType = function (type) {
        var i = this._onEventTypes.indexOf(type);
        if (i < 0) {
            return false;
        }
        var eventType = type.substring(0, 1).toUpperCase() + type.substring(1);
        return "_connect" + eventType;
    };
    IPC_WS.prototype._onSend = function (payloads) {
        var _this = this;
        var id = getIdFromPayloads(payloads);
        if (!id) {
            return;
        }
        return new Promise(function (res, rej) {
            var resetAbort = false;
            var request = {
                id: id,
                abort: function () {
                    resetAbort = true;
                }
            };
            _this.responseCbs[id] = function (data) {
                clearRequestAndTimeout();
                if (data && data.error) {
                    return rej(data);
                }
                res(data);
            };
            var _request = _this._addReq({
                request: request,
                rej: function (err) {
                    clearRequestAndTimeout();
                    rej(err);
                }
            });
            var clearRequestAndTimeout = function () {
                requestTimeout && clearTimeout(requestTimeout);
                requestTimeout = null;
                _this._removeReq(_request);
                for (var key in _this.responseCbs) {
                    if (_this.responseCbs[key] === id) {
                        delete _this.responseCbs[key];
                        break;
                    }
                }
            };
            var requestTimeout = _this.timeout ? setTimeout(function () {
                if (resetAbort) {
                    return;
                }
                clearRequestAndTimeout();
                return rej(_this.ERRORS.TIMEOUT(_this.timeout));
            }, _this.timeout) : null;
        });
    };
    IPC_WS.prototype.on = function (type, cb) {
        var eventType = this._checkOnType(type);
        if (eventType < 0) {
            return this.ERRORS.IPC_ON(type);
        }
        if (!cb) {
            return this.ERRORS.IPC_ON_CB(type);
        }
        this[eventType] = cb;
    };
    IPC_WS.prototype.remove = function (type) {
        var eventType = this._checkOnType(type);
        eventType && (this[eventType] = null);
    };
    return IPC_WS;
}(index_js_1.default));
exports.default = IPC_WS;
function getIdFromPayloads(payloads) {
    var id;
    if (payloads instanceof Array) {
        for (var i = 0; i < payloads.length; i++) {
            if (payloads[i].id) {
                id = payloads[i].id;
                break;
            }
        }
    }
    else {
        id = payloads.id || null;
    }
    return id;
}
//# sourceMappingURL=ipc_ws.js.map