"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var account;
(function (account) {
    account["accountCreate"] = "account_create";
    account["accountForPublicKey"] = "account_forPublicKey";
    account["accountPublicKey"] = "account_publicKey";
    account["accountValidate"] = "account_validate";
})(account = exports.account || (exports.account = {}));
var ledger;
(function (ledger) {
    ledger["accountBlocksCount"] = "ledger_accountBlocksCount";
    ledger["accountHistoryTopn"] = "ledger_accountHistoryTopn";
    ledger["accountInfo"] = "ledger_accountInfo";
    ledger["accountRepresentative"] = "ledger_accountRepresentative";
    ledger["accountVotingWeight"] = "ledger_accountVotingWeight";
    ledger["accountsBalances"] = "ledger_accountsBalances";
    ledger["accountsFrontiers"] = "ledger_accountsFrontiers";
    ledger["accountsPending"] = "ledger_accountsPending";
    ledger["accountsCount"] = "ledger_accountsCount";
    ledger["accounts"] = "ledger_accounts";
    ledger["blockAccount"] = "ledger_blockAccount";
    ledger["blockHash"] = "ledger_blockHash";
    ledger["blocks"] = "ledger_blocks";
    ledger["blocksCount"] = "ledger_blocksCount";
    ledger["blocksCountByType"] = "ledger_blocksCountByType";
    ledger["blocksInfo"] = "ledger_blocksInfo";
    ledger["chain"] = "ledger_chain";
    ledger["delegators"] = "ledger_delegators";
    ledger["delegatorsCount"] = "ledger_delegatorsCount";
    ledger["generateSendBlock"] = "ledger_generateSendBlock";
    ledger["generateReceiveBlock"] = "ledger_generateReceiveBlock";
    ledger["generateChangeBlock"] = "ledger_generateChangeBlock";
    ledger["process"] = "ledger_process";
    ledger["representatives"] = "ledger_representatives";
    ledger["tokens"] = "ledger_tokens";
    ledger["transactionsCount"] = "ledger_transactionsCount";
    ledger["tokenInfoById"] = "ledger_tokenInfoById";
    ledger["tokenInfoByName"] = "ledger_tokenInfoByName";
})(ledger = exports.ledger || (exports.ledger = {}));
var mintage;
(function (mintage) {
    mintage["getMintageData"] = "mintage_getMintageData";
    mintage["getMintageBlock"] = "mintage_getMintageBlock";
    mintage["getRewardBlock"] = "mintage_getRewardBlock";
})(mintage = exports.mintage || (exports.mintage = {}));
var sms;
(function (sms) {
    sms["phoneBlocks"] = "sms_phoneBlocks";
    sms["messageBlocks"] = "sms_messageBlocks";
    sms["messageHash"] = "sms_messageHash";
    sms["messageStore"] = "sms_messageStore";
})(sms = exports.sms || (exports.sms = {}));
var wallet;
(function (wallet) {
    wallet["getBalances"] = "wallet_getBalances";
    wallet["getRawKey"] = "wallet_getRawKey";
    wallet["newSeed"] = "wallet_newSeed";
    wallet["newWallet"] = "wallet_newWallet";
    wallet["changePassword"] = "wallet_changePassword";
})(wallet = exports.wallet || (exports.wallet = {}));
var net;
(function (net) {
    net["onlineRepresentatives"] = "net_onlineRepresentatives";
})(net = exports.net || (exports.net = {}));
var util;
(function (util) {
    util["decrypt"] = "util_decrypt";
    util["encrypt"] = "util_encrypt";
    util["rawToBalance"] = "util_rawToBalance";
    util["balanceToRaw"] = "util_balanceToRaw";
})(util = exports.util || (exports.util = {}));
var qlcclassic;
(function (qlcclassic) {
    qlcclassic["accountsFrontiers"] = "qlcclassic_accountsFrontiers";
    qlcclassic["accountsBalances"] = "qlcclassic_accountsBalances";
    qlcclassic["accountHistoryTopn"] = "qlcclassic_accountHistoryTopn";
    qlcclassic["accountsPending"] = "qlcclassic_accountsPending";
    qlcclassic["accountInfo"] = "qlcclassic_accountInfo";
    qlcclassic["validateAccount"] = "qlcclassic_validateAccount";
    qlcclassic["blocksInfo"] = "qlcclassic_blocksInfo";
    qlcclassic["process"] = "qlcclassic_process";
    qlcclassic["tokens"] = "qlcclassic_tokens";
    qlcclassic["onlineRepresentatives"] = "qlcclassic_getOnlineRepresentatives";
})(qlcclassic = exports.qlcclassic || (exports.qlcclassic = {}));
//# sourceMappingURL=method.js.map